;;; This file was automatically generated by SWIG (http://www.swig.org).
;;; Version 3.0.12

;;; This file has been modified manually in the following ways:
;;;
;;; 1. An in-package form has been added.
;;;
;;; 2. The libstarpu CFFI library is being defined.
;;;
;;; 3. All enum definitions are handled by the groveller.
;;;
;;; 4. All constant definitions are handled by the groveller.
;;; %s/(cl:defconstant \([A-Z_]+\).+)/(constant (\1 "\1"))/g

(in-package #:cl-starpu)

(cffi:define-foreign-library libstarpu
  (:unix (:or "libstarpu-1.3.so" "libstarpu-1.3.so.2"))
  (t (:default "libstarpu-1.3")))

(cffi:use-foreign-library libstarpu)

(cffi:defcfun ("starpu_pthread_mutex_lock_sched" starpu_pthread_mutex_lock_sched) :int
  (mutex :pointer))

(cffi:defcfun ("starpu_pthread_mutex_unlock_sched" starpu_pthread_mutex_unlock_sched) :int
  (mutex :pointer))

(cffi:defcfun ("starpu_pthread_mutex_trylock_sched" starpu_pthread_mutex_trylock_sched) :int
  (mutex :pointer))

(cffi:defcfun ("starpu_pthread_mutex_check_sched" starpu_pthread_mutex_check_sched) :void
  (mutex :pointer)
  (file :string)
  (line :int))

(cffi:defcfun ("starpu_sem_trywait" starpu_sem_trywait) :int
  (arg0 :pointer))

(cffi:defcfun ("starpu_sem_wait" starpu_sem_wait) :int
  (arg0 :pointer))

(cffi:defcfun ("_starpu_pthread_mutex_trylock" _starpu_pthread_mutex_trylock) :int
  (mutex :pointer)
  (file :string)
  (line :int))

(cffi:defcfun ("_starpu_pthread_mutex_trylock_sched" _starpu_pthread_mutex_trylock_sched) :int
  (mutex :pointer)
  (file :string)
  (line :int))

(cffi:defcfun ("_starpu_pthread_rwlock_tryrdlock" _starpu_pthread_rwlock_tryrdlock) :int
  (rwlock :pointer)
  (file :string)
  (line :int))

(cffi:defcfun ("_starpu_pthread_rwlock_trywrlock" _starpu_pthread_rwlock_trywrlock) :int
  (rwlock :pointer)
  (file :string)
  (line :int))

(cffi:defcfun ("starpu_data_set_name" starpu_data_set_name) :void
  (handle :pointer)
  (name :string))

(cffi:defcfun ("starpu_data_set_coordinates_array" starpu_data_set_coordinates_array) :void
  (handle :pointer)
  (dimensions :int)
  (dims :pointer))

(cffi:defcfun ("starpu_data_set_coordinates" starpu_data_set_coordinates) :void
  (handle :pointer)
  (dimensions :unsigned-int)
  &rest)

(cffi:defcfun ("starpu_data_unregister" starpu_data_unregister) :void
  (handle :pointer))

(cffi:defcfun ("starpu_data_unregister_no_coherency" starpu_data_unregister_no_coherency) :void
  (handle :pointer))

(cffi:defcfun ("starpu_data_unregister_submit" starpu_data_unregister_submit) :void
  (handle :pointer))

(cffi:defcfun ("starpu_data_invalidate" starpu_data_invalidate) :void
  (handle :pointer))

(cffi:defcfun ("starpu_data_invalidate_submit" starpu_data_invalidate_submit) :void
  (handle :pointer))

(cffi:defcfun ("starpu_data_advise_as_important" starpu_data_advise_as_important) :void
  (handle :pointer)
  (is_important :unsigned-int))

(cffi:defcfun ("starpu_data_acquire" starpu_data_acquire) :int
  (handle :pointer)
  (mode starpu_data_access_mode))

(cffi:defcfun ("starpu_data_acquire_on_node" starpu_data_acquire_on_node) :int
  (handle :pointer)
  (node :int)
  (mode starpu_data_access_mode))

(cffi:defcfun ("starpu_data_acquire_cb" starpu_data_acquire_cb) :int
  (handle :pointer)
  (mode starpu_data_access_mode)
  (callback :pointer)
  (arg :pointer))

(cffi:defcfun ("starpu_data_acquire_on_node_cb" starpu_data_acquire_on_node_cb) :int
  (handle :pointer)
  (node :int)
  (mode starpu_data_access_mode)
  (callback :pointer)
  (arg :pointer))

(cffi:defcfun ("starpu_data_acquire_cb_sequential_consistency" starpu_data_acquire_cb_sequential_consistency) :int
  (handle :pointer)
  (mode starpu_data_access_mode)
  (callback :pointer)
  (arg :pointer)
  (sequential_consistency :int))

(cffi:defcfun ("starpu_data_acquire_on_node_cb_sequential_consistency" starpu_data_acquire_on_node_cb_sequential_consistency) :int
  (handle :pointer)
  (node :int)
  (mode starpu_data_access_mode)
  (callback :pointer)
  (arg :pointer)
  (sequential_consistency :int))

(cffi:defcfun ("starpu_data_acquire_on_node_cb_sequential_consistency_quick" starpu_data_acquire_on_node_cb_sequential_consistency_quick) :int
  (handle :pointer)
  (node :int)
  (mode starpu_data_access_mode)
  (callback :pointer)
  (arg :pointer)
  (sequential_consistency :int)
  (quick :int))

(cffi:defcfun ("starpu_data_acquire_on_node_cb_sequential_consistency_sync_jobids" starpu_data_acquire_on_node_cb_sequential_consistency_sync_jobids) :int
  (handle :pointer)
  (node :int)
  (mode starpu_data_access_mode)
  (callback :pointer)
  (arg :pointer)
  (sequential_consistency :int)
  (quick :int)
  (pre_sync_jobid :pointer)
  (post_sync_jobid :pointer))

(cffi:defcfun ("starpu_data_acquire_try" starpu_data_acquire_try) :int
  (handle :pointer)
  (mode starpu_data_access_mode))

(cffi:defcfun ("starpu_data_acquire_on_node_try" starpu_data_acquire_on_node_try) :int
  (handle :pointer)
  (node :int)
  (mode starpu_data_access_mode))

(cffi:defcfun ("starpu_data_release" starpu_data_release) :void
  (handle :pointer))

(cffi:defcfun ("starpu_data_release_on_node" starpu_data_release_on_node) :void
  (handle :pointer)
  (node :int))

(cffi:defcfun ("starpu_arbiter_create" starpu_arbiter_create) :pointer)

(cffi:defcfun ("starpu_data_assign_arbiter" starpu_data_assign_arbiter) :void
  (handle :pointer)
  (arbiter :pointer))

(cffi:defcfun ("starpu_arbiter_destroy" starpu_arbiter_destroy) :void
  (arbiter :pointer))

(cffi:defcfun ("starpu_data_request_allocation" starpu_data_request_allocation) :int
  (handle :pointer)
  (node :unsigned-int))

(cffi:defcfun ("starpu_data_fetch_on_node" starpu_data_fetch_on_node) :int
  (handle :pointer)
  (node :unsigned-int)
  (async :unsigned-int))

(cffi:defcfun ("starpu_data_prefetch_on_node" starpu_data_prefetch_on_node) :int
  (handle :pointer)
  (node :unsigned-int)
  (async :unsigned-int))

(cffi:defcfun ("starpu_data_prefetch_on_node_prio" starpu_data_prefetch_on_node_prio) :int
  (handle :pointer)
  (node :unsigned-int)
  (async :unsigned-int)
  (prio :int))

(cffi:defcfun ("starpu_data_idle_prefetch_on_node" starpu_data_idle_prefetch_on_node) :int
  (handle :pointer)
  (node :unsigned-int)
  (async :unsigned-int))

(cffi:defcfun ("starpu_data_idle_prefetch_on_node_prio" starpu_data_idle_prefetch_on_node_prio) :int
  (handle :pointer)
  (node :unsigned-int)
  (async :unsigned-int)
  (prio :int))

(cffi:defcfun ("starpu_data_is_on_node" starpu_data_is_on_node) :unsigned-int
  (handle :pointer)
  (node :unsigned-int))

(cffi:defcfun ("starpu_data_wont_use" starpu_data_wont_use) :void
  (handle :pointer))

(cffi:defcfun ("starpu_data_set_wt_mask" starpu_data_set_wt_mask) :void
  (handle :pointer)
  (wt_mask :pointer))

(cffi:defcfun ("starpu_data_set_sequential_consistency_flag" starpu_data_set_sequential_consistency_flag) :void
  (handle :pointer)
  (flag :unsigned-int))

(cffi:defcfun ("starpu_data_get_sequential_consistency_flag" starpu_data_get_sequential_consistency_flag) :unsigned-int
  (handle :pointer))

(cffi:defcfun ("starpu_data_get_default_sequential_consistency_flag" starpu_data_get_default_sequential_consistency_flag) :unsigned-int)

(cffi:defcfun ("starpu_data_set_default_sequential_consistency_flag" starpu_data_set_default_sequential_consistency_flag) :void
  (flag :unsigned-int))

(cffi:defcfun ("starpu_data_set_ooc_flag" starpu_data_set_ooc_flag) :void
  (handle :pointer)
  (flag :unsigned-int))

(cffi:defcfun ("starpu_data_get_ooc_flag" starpu_data_get_ooc_flag) :unsigned-int
  (handle :pointer))

(cffi:defcfun ("starpu_data_query_status" starpu_data_query_status) :void
  (handle :pointer)
  (memory_node :int)
  (is_allocated :pointer)
  (is_valid :pointer)
  (is_requested :pointer))

(cffi:defcfun ("starpu_data_set_reduction_methods" starpu_data_set_reduction_methods) :void
  (handle :pointer)
  (redux_cl :pointer)
  (init_cl :pointer))

(cffi:defcfun ("starpu_data_get_interface_ops" starpu_data_get_interface_ops) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_data_test_if_allocated_on_node" starpu_data_test_if_allocated_on_node) :unsigned-int
  (handle :pointer)
  (memory_node :unsigned-int))

(cffi:defcfun ("starpu_memchunk_tidy" starpu_memchunk_tidy) :void
  (memory_node :unsigned-int))

(cffi:defcfun ("starpu_data_set_user_data" starpu_data_set_user_data) :void
  (handle :pointer)
  (user_data :pointer))

(cffi:defcfun ("starpu_data_get_user_data" starpu_data_get_user_data) :pointer
  (handle :pointer))

(cffi:defcvar ("_starpu_silent" _starpu_silent)
  :int)

(cffi:defcfun ("starpu_getenv" starpu_getenv) :string
  (str :string))

(cffi:defcfun ("starpu_get_env_number" starpu_get_env_number) :int
  (str :string))

(cffi:defcfun ("starpu_get_env_number_default" starpu_get_env_number_default) :int
  (str :string)
  (defval :int))

(cffi:defcfun ("starpu_get_env_float_default" starpu_get_env_float_default) :float
  (str :string)
  (defval :float))

(cffi:defcfun ("starpu_execute_on_each_worker" starpu_execute_on_each_worker) :void
  (func :pointer)
  (arg :pointer)
  (where :pointer))

(cffi:defcfun ("starpu_execute_on_each_worker_ex" starpu_execute_on_each_worker_ex) :void
  (func :pointer)
  (arg :pointer)
  (where :pointer)
  (name :string))

(cffi:defcfun ("starpu_execute_on_specific_workers" starpu_execute_on_specific_workers) :void
  (func :pointer)
  (arg :pointer)
  (num_workers :unsigned-int)
  (workers :pointer)
  (name :string))

(cffi:defcfun ("starpu_timing_now" starpu_timing_now) :double)

(cffi:defcfun ("starpu_data_cpy" starpu_data_cpy) :int
  (dst_handle :pointer)
  (src_handle :pointer)
  (asynchronous :int)
  (callback_func :pointer)
  (callback_arg :pointer))

(cffi:defcstruct starpu_disk_ops
  (plug :pointer)
  (unplug :pointer)
  (bandwidth :pointer)
  (alloc :pointer)
  (free :pointer)
  (open :pointer)
  (close :pointer)
  (read :pointer)
  (write :pointer)
  (full_read :pointer)
  (full_write :pointer)
  (async_write :pointer)
  (async_read :pointer)
  (async_full_read :pointer)
  (async_full_write :pointer)
  (copy :pointer)
  (wait_request :pointer)
  (test_request :pointer)
  (free_request :pointer))

(cffi:defcvar ("starpu_disk_stdio_ops" starpu_disk_stdio_ops)
  starpu_disk_ops)

(cffi:defcvar ("starpu_disk_hdf5_ops" starpu_disk_hdf5_ops)
  starpu_disk_ops)

(cffi:defcvar ("starpu_disk_unistd_ops" starpu_disk_unistd_ops)
  starpu_disk_ops)

(cffi:defcvar ("starpu_disk_unistd_o_direct_ops" starpu_disk_unistd_o_direct_ops)
  starpu_disk_ops)

(cffi:defcvar ("starpu_disk_leveldb_ops" starpu_disk_leveldb_ops)
  starpu_disk_ops)

(cffi:defcfun ("starpu_disk_close" starpu_disk_close) :void
  (node :unsigned-int)
  (obj :pointer)
  (size :pointer))

(cffi:defcfun ("starpu_disk_open" starpu_disk_open) :pointer
  (node :unsigned-int)
  (pos :pointer)
  (size :pointer))

(cffi:defcfun ("starpu_disk_register" starpu_disk_register) :int
  (func :pointer)
  (parameter :pointer)
  (size :pointer))

(cffi:defcvar ("starpu_disk_swap_node" starpu_disk_swap_node)
  :int)

(cffi:defcstruct starpu_data_copy_methods
  (can_copy :pointer)
  (ram_to_ram :pointer)
  (ram_to_cuda :pointer)
  (ram_to_opencl :pointer)
  (ram_to_mic :pointer)
  (cuda_to_ram :pointer)
  (cuda_to_cuda :pointer)
  (cuda_to_opencl :pointer)
  (opencl_to_ram :pointer)
  (opencl_to_cuda :pointer)
  (opencl_to_opencl :pointer)
  (mic_to_ram :pointer)
  (ram_to_mpi_ms :pointer)
  (mpi_ms_to_ram :pointer)
  (mpi_ms_to_mpi_ms :pointer)
  (ram_to_cuda_async :pointer)
  (cuda_to_ram_async :pointer)
  (cuda_to_cuda_async :pointer)
  (ram_to_opencl_async :pointer)
  (opencl_to_ram_async :pointer)
  (opencl_to_opencl_async :pointer)
  (ram_to_mpi_ms_async :pointer)
  (mpi_ms_to_ram_async :pointer)
  (mpi_ms_to_mpi_ms_async :pointer)
  (ram_to_mic_async :pointer)
  (mic_to_ram_async :pointer)
  (any_to_any :pointer))

(cffi:defcstruct starpu_data_interface_ops
  (register_data_handle :pointer)
  (allocate_data_on_node :pointer)
  (free_data_on_node :pointer)
  (init :pointer)
  (copy_methods :pointer)
  (handle_to_pointer :pointer)
  (to_pointer :pointer)
  (pointer_is_inside :pointer)
  (get_size :pointer)
  (get_alloc_size :pointer)
  (footprint :pointer)
  (alloc_footprint :pointer)
  (compare :pointer)
  (alloc_compare :pointer)
  (display :pointer)
  (describe :pointer)
  (interfaceid starpu_data_interface_id)
  (interface_size :pointer)
  (is_multiformat :char)
  (dontcache :char)
  (get_mf_ops :pointer)
  (pack_data :pointer)
  (unpack_data :pointer)
  (name :string))

(cffi:defcfun ("starpu_data_register" starpu_data_register) :void
  (handleptr :pointer)
  (home_node :int)
  (data_interface :pointer)
  (ops :pointer))

(cffi:defcfun ("starpu_data_ptr_register" starpu_data_ptr_register) :void
  (handle :pointer)
  (node :unsigned-int))

(cffi:defcfun ("starpu_data_register_same" starpu_data_register_same) :void
  (handledst :pointer)
  (handlesrc :pointer))

(cffi:defcfun ("starpu_data_handle_to_pointer" starpu_data_handle_to_pointer) :pointer
  (handle :pointer)
  (node :unsigned-int))

(cffi:defcfun ("starpu_data_pointer_is_inside" starpu_data_pointer_is_inside) :int
  (handle :pointer)
  (node :unsigned-int)
  (ptr :pointer))

(cffi:defcfun ("starpu_data_get_local_ptr" starpu_data_get_local_ptr) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_data_get_interface_on_node" starpu_data_get_interface_on_node) :pointer
  (handle :pointer)
  (memory_node :unsigned-int))

(cffi:defcfun ("starpu_data_get_interface_id" starpu_data_get_interface_id) starpu_data_interface_id
  (handle :pointer))

(cffi:defcfun ("starpu_data_pack" starpu_data_pack) :int
  (handle :pointer)
  (ptr :pointer)
  (count :pointer))

(cffi:defcfun ("starpu_data_unpack" starpu_data_unpack) :int
  (handle :pointer)
  (ptr :pointer)
  (count :pointer))

(cffi:defcfun ("starpu_data_get_size" starpu_data_get_size) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_data_get_alloc_size" starpu_data_get_alloc_size) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_data_lookup" starpu_data_lookup) :pointer
  (ptr :pointer))

(cffi:defcfun ("starpu_data_get_home_node" starpu_data_get_home_node) :int
  (handle :pointer))

(cffi:defcfun ("starpu_data_interface_get_next_id" starpu_data_interface_get_next_id) :int)

(cffi:defcfun ("starpu_interface_copy" starpu_interface_copy) :int
  (src :pointer)
  (src_offset :pointer)
  (src_node :unsigned-int)
  (dst :pointer)
  (dst_offset :pointer)
  (dst_node :unsigned-int)
  (size :pointer)
  (async_data :pointer))

(cffi:defcfun ("starpu_interface_start_driver_copy_async" starpu_interface_start_driver_copy_async) :void
  (src_node :unsigned-int)
  (dst_node :unsigned-int)
  (start :pointer))

(cffi:defcfun ("starpu_interface_end_driver_copy_async" starpu_interface_end_driver_copy_async) :void
  (src_node :unsigned-int)
  (dst_node :unsigned-int)
  (start :double))

(cffi:defcfun ("starpu_interface_data_copy" starpu_interface_data_copy) :void
  (src_node :unsigned-int)
  (dst_node :unsigned-int)
  (size :pointer))

(cffi:defcfun ("starpu_malloc_on_node_flags" starpu_malloc_on_node_flags) :pointer
  (dst_node :unsigned-int)
  (size :pointer)
  (flags :int))

(cffi:defcfun ("starpu_malloc_on_node" starpu_malloc_on_node) :pointer
  (dst_node :unsigned-int)
  (size :pointer))

(cffi:defcfun ("starpu_free_on_node_flags" starpu_free_on_node_flags) :void
  (dst_node :unsigned-int)
  (addr :pointer)
  (size :pointer)
  (flags :int))

(cffi:defcfun ("starpu_free_on_node" starpu_free_on_node) :void
  (dst_node :unsigned-int)
  (addr :pointer)
  (size :pointer))

(cffi:defcfun ("starpu_malloc_on_node_set_default_flags" starpu_malloc_on_node_set_default_flags) :void
  (node :unsigned-int)
  (flags :int))

(cffi:defcvar ("starpu_interface_matrix_ops" starpu_interface_matrix_ops)
  starpu_data_interface_ops)

(cffi:defcstruct starpu_matrix_interface
  (id starpu_data_interface_id)
  (ptr :pointer)
  (dev_handle :pointer)
  (offset :pointer)
  (nx :pointer)
  (ny :pointer)
  (ld :pointer)
  (elemsize :pointer)
  (allocsize :pointer))

(cffi:defcfun ("starpu_matrix_data_register" starpu_matrix_data_register) :void
  (handle :pointer)
  (home_node :int)
  (ptr :pointer)
  (ld :pointer)
  (nx :pointer)
  (ny :pointer)
  (elemsize :pointer))

(cffi:defcfun ("starpu_matrix_data_register_allocsize" starpu_matrix_data_register_allocsize) :void
  (handle :pointer)
  (home_node :int)
  (ptr :pointer)
  (ld :pointer)
  (nx :pointer)
  (ny :pointer)
  (elemsize :pointer)
  (allocsize :pointer))

(cffi:defcfun ("starpu_matrix_ptr_register" starpu_matrix_ptr_register) :void
  (handle :pointer)
  (node :unsigned-int)
  (ptr :pointer)
  (dev_handle :pointer)
  (offset :pointer)
  (ld :pointer))

(cffi:defcfun ("starpu_matrix_get_nx" starpu_matrix_get_nx) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_matrix_get_ny" starpu_matrix_get_ny) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_matrix_get_local_ld" starpu_matrix_get_local_ld) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_matrix_get_local_ptr" starpu_matrix_get_local_ptr) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_matrix_get_elemsize" starpu_matrix_get_elemsize) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_matrix_get_allocsize" starpu_matrix_get_allocsize) :pointer
  (handle :pointer))

(cffi:defcvar ("starpu_interface_coo_ops" starpu_interface_coo_ops)
  starpu_data_interface_ops)

(cffi:defcstruct starpu_coo_interface
  (id starpu_data_interface_id)
  (columns :pointer)
  (rows :pointer)
  (values :pointer)
  (nx :pointer)
  (ny :pointer)
  (n_values :pointer)
  (elemsize :pointer))

(cffi:defcfun ("starpu_coo_data_register" starpu_coo_data_register) :void
  (handleptr :pointer)
  (home_node :int)
  (nx :pointer)
  (ny :pointer)
  (n_values :pointer)
  (columns :pointer)
  (rows :pointer)
  (values :pointer)
  (elemsize :pointer))

(cffi:defcvar ("starpu_interface_block_ops" starpu_interface_block_ops)
  starpu_data_interface_ops)

(cffi:defcstruct starpu_block_interface
  (id starpu_data_interface_id)
  (ptr :pointer)
  (dev_handle :pointer)
  (offset :pointer)
  (nx :pointer)
  (ny :pointer)
  (nz :pointer)
  (ldy :pointer)
  (ldz :pointer)
  (elemsize :pointer))

(cffi:defcfun ("starpu_block_data_register" starpu_block_data_register) :void
  (handle :pointer)
  (home_node :int)
  (ptr :pointer)
  (ldy :pointer)
  (ldz :pointer)
  (nx :pointer)
  (ny :pointer)
  (nz :pointer)
  (elemsize :pointer))

(cffi:defcfun ("starpu_block_ptr_register" starpu_block_ptr_register) :void
  (handle :pointer)
  (node :unsigned-int)
  (ptr :pointer)
  (dev_handle :pointer)
  (offset :pointer)
  (ldy :pointer)
  (ldz :pointer))

(cffi:defcfun ("starpu_block_get_nx" starpu_block_get_nx) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_block_get_ny" starpu_block_get_ny) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_block_get_nz" starpu_block_get_nz) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_block_get_local_ldy" starpu_block_get_local_ldy) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_block_get_local_ldz" starpu_block_get_local_ldz) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_block_get_local_ptr" starpu_block_get_local_ptr) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_block_get_elemsize" starpu_block_get_elemsize) :pointer
  (handle :pointer))

(cffi:defcvar ("starpu_interface_vector_ops" starpu_interface_vector_ops)
  starpu_data_interface_ops)

(cffi:defcstruct starpu_vector_interface
  (id starpu_data_interface_id)
  (ptr :pointer)
  (dev_handle :pointer)
  (offset :pointer)
  (nx :pointer)
  (elemsize :pointer)
  (slice_base :pointer)
  (allocsize :pointer))

(cffi:defcfun ("starpu_vector_data_register" starpu_vector_data_register) :void
  (handle :pointer)
  (home_node :int)
  (ptr :pointer)
  (nx :pointer)
  (elemsize :pointer))

(cffi:defcfun ("starpu_vector_data_register_allocsize" starpu_vector_data_register_allocsize) :void
  (handle :pointer)
  (home_node :int)
  (ptr :pointer)
  (nx :pointer)
  (elemsize :pointer)
  (allocsize :pointer))

(cffi:defcfun ("starpu_vector_ptr_register" starpu_vector_ptr_register) :void
  (handle :pointer)
  (node :unsigned-int)
  (ptr :pointer)
  (dev_handle :pointer)
  (offset :pointer))

(cffi:defcfun ("starpu_vector_get_nx" starpu_vector_get_nx) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_vector_get_elemsize" starpu_vector_get_elemsize) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_vector_get_allocsize" starpu_vector_get_allocsize) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_vector_get_local_ptr" starpu_vector_get_local_ptr) :pointer
  (handle :pointer))

(cffi:defcvar ("starpu_interface_variable_ops" starpu_interface_variable_ops)
  starpu_data_interface_ops)

(cffi:defcstruct starpu_variable_interface
  (id starpu_data_interface_id)
  (ptr :pointer)
  (dev_handle :pointer)
  (offset :pointer)
  (elemsize :pointer))

(cffi:defcfun ("starpu_variable_data_register" starpu_variable_data_register) :void
  (handle :pointer)
  (home_node :int)
  (ptr :pointer)
  (size :pointer))

(cffi:defcfun ("starpu_variable_ptr_register" starpu_variable_ptr_register) :void
  (handle :pointer)
  (node :unsigned-int)
  (ptr :pointer)
  (dev_handle :pointer)
  (offset :pointer))

(cffi:defcfun ("starpu_variable_get_elemsize" starpu_variable_get_elemsize) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_variable_get_local_ptr" starpu_variable_get_local_ptr) :pointer
  (handle :pointer))

(cffi:defcvar ("starpu_interface_void_ops" starpu_interface_void_ops)
  starpu_data_interface_ops)

(cffi:defcfun ("starpu_void_data_register" starpu_void_data_register) :void
  (handle :pointer))

(cffi:defcvar ("starpu_interface_csr_ops" starpu_interface_csr_ops)
  starpu_data_interface_ops)

(cffi:defcstruct starpu_csr_interface
  (id starpu_data_interface_id)
  (nnz :pointer)
  (nrow :pointer)
  (nzval :pointer)
  (colind :pointer)
  (rowptr :pointer)
  (firstentry :pointer)
  (elemsize :pointer))

(cffi:defcfun ("starpu_csr_data_register" starpu_csr_data_register) :void
  (handle :pointer)
  (home_node :int)
  (nnz :pointer)
  (nrow :pointer)
  (nzval :pointer)
  (colind :pointer)
  (rowptr :pointer)
  (firstentry :pointer)
  (elemsize :pointer))

(cffi:defcfun ("starpu_csr_get_nnz" starpu_csr_get_nnz) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_csr_get_nrow" starpu_csr_get_nrow) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_csr_get_firstentry" starpu_csr_get_firstentry) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_csr_get_local_nzval" starpu_csr_get_local_nzval) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_csr_get_local_colind" starpu_csr_get_local_colind) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_csr_get_local_rowptr" starpu_csr_get_local_rowptr) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_csr_get_elemsize" starpu_csr_get_elemsize) :pointer
  (handle :pointer))

(cffi:defcvar ("starpu_interface_bcsr_ops" starpu_interface_bcsr_ops)
  starpu_data_interface_ops)

(cffi:defcstruct starpu_bcsr_interface
  (id starpu_data_interface_id)
  (nnz :pointer)
  (nrow :pointer)
  (nzval :pointer)
  (colind :pointer)
  (rowptr :pointer)
  (firstentry :pointer)
  (r :pointer)
  (c :pointer)
  (elemsize :pointer))

(cffi:defcfun ("starpu_bcsr_data_register" starpu_bcsr_data_register) :void
  (handle :pointer)
  (home_node :int)
  (nnz :pointer)
  (nrow :pointer)
  (nzval :pointer)
  (colind :pointer)
  (rowptr :pointer)
  (firstentry :pointer)
  (r :pointer)
  (c :pointer)
  (elemsize :pointer))

(cffi:defcfun ("starpu_bcsr_get_nnz" starpu_bcsr_get_nnz) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_bcsr_get_nrow" starpu_bcsr_get_nrow) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_bcsr_get_firstentry" starpu_bcsr_get_firstentry) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_bcsr_get_local_nzval" starpu_bcsr_get_local_nzval) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_bcsr_get_local_colind" starpu_bcsr_get_local_colind) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_bcsr_get_local_rowptr" starpu_bcsr_get_local_rowptr) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_bcsr_get_r" starpu_bcsr_get_r) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_bcsr_get_c" starpu_bcsr_get_c) :pointer
  (handle :pointer))

(cffi:defcfun ("starpu_bcsr_get_elemsize" starpu_bcsr_get_elemsize) :pointer
  (handle :pointer))

(cffi:defcstruct starpu_multiformat_data_interface_ops
  (cpu_elemsize :pointer)
  (opencl_elemsize :pointer)
  (cpu_to_opencl_cl :pointer)
  (opencl_to_cpu_cl :pointer)
  (cuda_elemsize :pointer)
  (cpu_to_cuda_cl :pointer)
  (cuda_to_cpu_cl :pointer)
  (mic_elemsize :pointer)
  (cpu_to_mic_cl :pointer)
  (mic_to_cpu_cl :pointer))

(cffi:defcstruct starpu_multiformat_interface
  (id starpu_data_interface_id)
  (cpu_ptr :pointer)
  (cuda_ptr :pointer)
  (opencl_ptr :pointer)
  (mic_ptr :pointer)
  (nx :pointer)
  (ops :pointer))

(cffi:defcfun ("starpu_multiformat_data_register" starpu_multiformat_data_register) :void
  (handle :pointer)
  (home_node :int)
  (ptr :pointer)
  (nobjects :pointer)
  (format_ops :pointer))

(cffi:defcstruct starpu_data_filter
  (filter_func :pointer)
  (nchildren :unsigned-int)
  (get_nchildren :pointer)
  (get_child_ops :pointer)
  (filter_arg :unsigned-int)
  (filter_arg_ptr :pointer))

(cffi:defcfun ("starpu_data_partition" starpu_data_partition) :void
  (initial_handle :pointer)
  (f :pointer))

(cffi:defcfun ("starpu_data_unpartition" starpu_data_unpartition) :void
  (root_data :pointer)
  (gathering_node :unsigned-int))

(cffi:defcfun ("starpu_data_get_child" starpu_data_get_child) :pointer
  (handle :pointer)
  (i :unsigned-int))

(cffi:defcfun ("starpu_data_get_nb_children" starpu_data_get_nb_children) :int
  (handle :pointer))

(cffi:defcfun ("starpu_data_get_sub_data" starpu_data_get_sub_data) :pointer
  (root_data :pointer)
  (depth :unsigned-int)
  &rest)

(cffi:defcfun ("starpu_data_vget_sub_data" starpu_data_vget_sub_data) :pointer
  (root_data :pointer)
  (depth :unsigned-int)
  (pa :pointer))

(cffi:defcfun ("starpu_data_map_filters" starpu_data_map_filters) :void
  (root_data :pointer)
  (nfilters :unsigned-int)
  &rest)

(cffi:defcfun ("starpu_data_vmap_filters" starpu_data_vmap_filters) :void
  (root_data :pointer)
  (nfilters :unsigned-int)
  (pa :pointer))

(cffi:defcfun ("starpu_data_partition_plan" starpu_data_partition_plan) :void
  (initial_handle :pointer)
  (f :pointer)
  (children :pointer))

(cffi:defcfun ("starpu_data_partition_submit" starpu_data_partition_submit) :void
  (initial_handle :pointer)
  (nparts :unsigned-int)
  (children :pointer))

(cffi:defcfun ("starpu_data_partition_readonly_submit" starpu_data_partition_readonly_submit) :void
  (initial_handle :pointer)
  (nparts :unsigned-int)
  (children :pointer))

(cffi:defcfun ("starpu_data_partition_readwrite_upgrade_submit" starpu_data_partition_readwrite_upgrade_submit) :void
  (initial_handle :pointer)
  (nparts :unsigned-int)
  (children :pointer))

(cffi:defcfun ("starpu_data_unpartition_submit" starpu_data_unpartition_submit) :void
  (initial_handle :pointer)
  (nparts :unsigned-int)
  (children :pointer)
  (gathering_node :int))

(cffi:defcfun ("starpu_data_unpartition_submit_r" starpu_data_unpartition_submit_r) :void
  (initial_handle :pointer)
  (gathering_node :int))

(cffi:defcfun ("starpu_data_unpartition_readonly_submit" starpu_data_unpartition_readonly_submit) :void
  (initial_handle :pointer)
  (nparts :unsigned-int)
  (children :pointer)
  (gathering_node :int))

(cffi:defcfun ("starpu_data_partition_clean" starpu_data_partition_clean) :void
  (root_data :pointer)
  (nparts :unsigned-int)
  (children :pointer))

(cffi:defcfun ("starpu_data_unpartition_submit_sequential_consistency_cb" starpu_data_unpartition_submit_sequential_consistency_cb) :void
  (initial_handle :pointer)
  (nparts :unsigned-int)
  (children :pointer)
  (gather_node :int)
  (sequential_consistency :int)
  (callback_func :pointer)
  (callback_arg :pointer))

(cffi:defcfun ("starpu_data_partition_submit_sequential_consistency" starpu_data_partition_submit_sequential_consistency) :void
  (initial_handle :pointer)
  (nparts :unsigned-int)
  (children :pointer)
  (sequential_consistency :int))

(cffi:defcfun ("starpu_data_unpartition_submit_sequential_consistency" starpu_data_unpartition_submit_sequential_consistency) :void
  (initial_handle :pointer)
  (nparts :unsigned-int)
  (children :pointer)
  (gathering_node :int)
  (sequential_consistency :int))

(cffi:defcfun ("starpu_data_partition_not_automatic" starpu_data_partition_not_automatic) :void
  (handle :pointer))

(cffi:defcfun ("starpu_bcsr_filter_canonical_block" starpu_bcsr_filter_canonical_block) :void
  (father_interface :pointer)
  (child_interface :pointer)
  (f :pointer)
  (id :unsigned-int)
  (nparts :unsigned-int))

(cffi:defcfun ("starpu_bcsr_filter_canonical_block_child_ops" starpu_bcsr_filter_canonical_block_child_ops) :pointer
  (f :pointer)
  (child :unsigned-int))

(cffi:defcfun ("starpu_csr_filter_vertical_block" starpu_csr_filter_vertical_block) :void
  (father_interface :pointer)
  (child_interface :pointer)
  (f :pointer)
  (id :unsigned-int)
  (nparts :unsigned-int))

(cffi:defcfun ("starpu_matrix_filter_block" starpu_matrix_filter_block) :void
  (father_interface :pointer)
  (child_interface :pointer)
  (f :pointer)
  (id :unsigned-int)
  (nparts :unsigned-int))

(cffi:defcfun ("starpu_matrix_filter_block_shadow" starpu_matrix_filter_block_shadow) :void
  (father_interface :pointer)
  (child_interface :pointer)
  (f :pointer)
  (id :unsigned-int)
  (nparts :unsigned-int))

(cffi:defcfun ("starpu_matrix_filter_vertical_block" starpu_matrix_filter_vertical_block) :void
  (father_interface :pointer)
  (child_interface :pointer)
  (f :pointer)
  (id :unsigned-int)
  (nparts :unsigned-int))

(cffi:defcfun ("starpu_matrix_filter_vertical_block_shadow" starpu_matrix_filter_vertical_block_shadow) :void
  (father_interface :pointer)
  (child_interface :pointer)
  (f :pointer)
  (id :unsigned-int)
  (nparts :unsigned-int))

(cffi:defcfun ("starpu_vector_filter_block" starpu_vector_filter_block) :void
  (father_interface :pointer)
  (child_interface :pointer)
  (f :pointer)
  (id :unsigned-int)
  (nparts :unsigned-int))

(cffi:defcfun ("starpu_vector_filter_block_shadow" starpu_vector_filter_block_shadow) :void
  (father_interface :pointer)
  (child_interface :pointer)
  (f :pointer)
  (id :unsigned-int)
  (nparts :unsigned-int))

(cffi:defcfun ("starpu_vector_filter_list_long" starpu_vector_filter_list_long) :void
  (father_interface :pointer)
  (child_interface :pointer)
  (f :pointer)
  (id :unsigned-int)
  (nparts :unsigned-int))

(cffi:defcfun ("starpu_vector_filter_list" starpu_vector_filter_list) :void
  (father_interface :pointer)
  (child_interface :pointer)
  (f :pointer)
  (id :unsigned-int)
  (nparts :unsigned-int))

(cffi:defcfun ("starpu_vector_filter_divide_in_2" starpu_vector_filter_divide_in_2) :void
  (father_interface :pointer)
  (child_interface :pointer)
  (f :pointer)
  (id :unsigned-int)
  (nparts :unsigned-int))

(cffi:defcfun ("starpu_block_filter_block" starpu_block_filter_block) :void
  (father_interface :pointer)
  (child_interface :pointer)
  (f :pointer)
  (id :unsigned-int)
  (nparts :unsigned-int))

(cffi:defcfun ("starpu_block_filter_block_shadow" starpu_block_filter_block_shadow) :void
  (father_interface :pointer)
  (child_interface :pointer)
  (f :pointer)
  (id :unsigned-int)
  (nparts :unsigned-int))

(cffi:defcfun ("starpu_block_filter_vertical_block" starpu_block_filter_vertical_block) :void
  (father_interface :pointer)
  (child_interface :pointer)
  (f :pointer)
  (id :unsigned-int)
  (nparts :unsigned-int))

(cffi:defcfun ("starpu_block_filter_vertical_block_shadow" starpu_block_filter_vertical_block_shadow) :void
  (father_interface :pointer)
  (child_interface :pointer)
  (f :pointer)
  (id :unsigned-int)
  (nparts :unsigned-int))

(cffi:defcfun ("starpu_block_filter_depth_block" starpu_block_filter_depth_block) :void
  (father_interface :pointer)
  (child_interface :pointer)
  (f :pointer)
  (id :unsigned-int)
  (nparts :unsigned-int))

(cffi:defcfun ("starpu_block_filter_depth_block_shadow" starpu_block_filter_depth_block_shadow) :void
  (father_interface :pointer)
  (child_interface :pointer)
  (f :pointer)
  (id :unsigned-int)
  (nparts :unsigned-int))

(cffi:defcfun ("starpu_filter_nparts_compute_chunk_size_and_offset" starpu_filter_nparts_compute_chunk_size_and_offset) :void
  (n :unsigned-int)
  (nparts :unsigned-int)
  (elemsize :pointer)
  (id :unsigned-int)
  (ld :unsigned-int)
  (chunk_size :pointer)
  (offset :pointer))

(cffi:defcfun ("starpu_malloc_set_align" starpu_malloc_set_align) :void
  (align :pointer))

(cffi:defcfun ("starpu_malloc" starpu_malloc) :int
  (A :pointer)
  (dim :pointer))

(cffi:defcfun ("starpu_free" starpu_free) :int
  (A :pointer))

(cffi:defcfun ("starpu_malloc_flags" starpu_malloc_flags) :int
  (A :pointer)
  (dim :pointer)
  (flags :int))

(cffi:defcfun ("starpu_free_flags" starpu_free_flags) :int
  (A :pointer)
  (dim :pointer)
  (flags :int))

(cffi:defcfun ("starpu_malloc_set_hooks" starpu_malloc_set_hooks) :void
  (malloc_hook :pointer)
  (free_hook :pointer))

(cffi:defcfun ("starpu_memory_pin" starpu_memory_pin) :int
  (addr :pointer)
  (size :pointer))

(cffi:defcfun ("starpu_memory_unpin" starpu_memory_unpin) :int
  (addr :pointer)
  (size :pointer))

(cffi:defcfun ("starpu_memory_get_total" starpu_memory_get_total) :pointer
  (node :unsigned-int))

(cffi:defcfun ("starpu_memory_get_available" starpu_memory_get_available) :pointer
  (node :unsigned-int))

(cffi:defcfun ("starpu_memory_get_total_all_nodes" starpu_memory_get_total_all_nodes) :pointer)

(cffi:defcfun ("starpu_memory_get_available_all_nodes" starpu_memory_get_available_all_nodes) :pointer)

(cffi:defcfun ("starpu_memory_allocate" starpu_memory_allocate) :int
  (node :unsigned-int)
  (size :pointer)
  (flags :int))

(cffi:defcfun ("starpu_memory_deallocate" starpu_memory_deallocate) :void
  (node :unsigned-int)
  (size :pointer))

(cffi:defcfun ("starpu_memory_wait_available" starpu_memory_wait_available) :void
  (node :unsigned-int)
  (size :pointer))

(cffi:defcfun ("starpu_sleep" starpu_sleep) :void
  (nb_sec :float))

(cffi:defcfun ("starpu_usleep" starpu_usleep) :void
  (nb_micro_sec :float))

(cffi:defcfun ("starpu_task_bundle_create" starpu_task_bundle_create) :void
  (bundle :pointer))

(cffi:defcfun ("starpu_task_bundle_insert" starpu_task_bundle_insert) :int
  (bundle :pointer)
  (task :pointer))

(cffi:defcfun ("starpu_task_bundle_remove" starpu_task_bundle_remove) :int
  (bundle :pointer)
  (task :pointer))

(cffi:defcfun ("starpu_task_bundle_close" starpu_task_bundle_close) :void
  (bundle :pointer))

(cffi:defcfun ("starpu_task_bundle_expected_length" starpu_task_bundle_expected_length) :double
  (bundle :pointer)
  (arch :pointer)
  (nimpl :unsigned-int))

(cffi:defcfun ("starpu_task_bundle_expected_data_transfer_time" starpu_task_bundle_expected_data_transfer_time) :double
  (bundle :pointer)
  (memory_node :unsigned-int))

(cffi:defcfun ("starpu_task_bundle_expected_energy" starpu_task_bundle_expected_energy) :double
  (bundle :pointer)
  (arch :pointer)
  (nimpl :unsigned-int))

(cffi:defcfun ("starpu_task_declare_deps_array" starpu_task_declare_deps_array) :void
  (task :pointer)
  (ndeps :unsigned-int)
  (task_array :pointer))

(cffi:defcfun ("starpu_task_declare_deps" starpu_task_declare_deps) :void
  (task :pointer)
  (ndeps :unsigned-int)
  &rest)

(cffi:defcfun ("starpu_task_declare_end_deps_array" starpu_task_declare_end_deps_array) :void
  (task :pointer)
  (ndeps :unsigned-int)
  (task_array :pointer))

(cffi:defcfun ("starpu_task_declare_end_deps" starpu_task_declare_end_deps) :void
  (task :pointer)
  (ndeps :unsigned-int)
  &rest)

(cffi:defcfun ("starpu_task_get_task_succs" starpu_task_get_task_succs) :int
  (task :pointer)
  (ndeps :unsigned-int)
  (task_array :pointer))

(cffi:defcfun ("starpu_task_get_task_scheduled_succs" starpu_task_get_task_scheduled_succs) :int
  (task :pointer)
  (ndeps :unsigned-int)
  (task_array :pointer))

(cffi:defcfun ("starpu_task_end_dep_add" starpu_task_end_dep_add) :void
  (t_arg0 :pointer)
  (nb_deps :int))

(cffi:defcfun ("starpu_task_end_dep_release" starpu_task_end_dep_release) :void
  (t_arg0 :pointer))

(cffi:defcfun ("starpu_tag_declare_deps" starpu_tag_declare_deps) :void
  (id :pointer)
  (ndeps :unsigned-int)
  &rest)

(cffi:defcfun ("starpu_tag_declare_deps_array" starpu_tag_declare_deps_array) :void
  (id :pointer)
  (ndeps :unsigned-int)
  (array :pointer))

(cffi:defcfun ("starpu_tag_wait" starpu_tag_wait) :int
  (id :pointer))

(cffi:defcfun ("starpu_tag_wait_array" starpu_tag_wait_array) :int
  (ntags :unsigned-int)
  (id :pointer))

(cffi:defcfun ("starpu_tag_restart" starpu_tag_restart) :void
  (id :pointer))

(cffi:defcfun ("starpu_tag_remove" starpu_tag_remove) :void
  (id :pointer))

(cffi:defcfun ("starpu_tag_notify_from_apps" starpu_tag_notify_from_apps) :void
  (id :pointer))

(cffi:defcfun ("starpu_tag_get_task" starpu_tag_get_task) :pointer
  (id :pointer))

(cffi:defcstruct starpu_codelet
  (where :pointer)
  (can_execute :pointer)
  (type starpu_codelet_type)
  (max_parallelism :int)
  (cpu_func :pointer)
  (cuda_func :pointer)
  (opencl_func :pointer)
  (cpu_funcs :pointer :count 4)
  (cuda_funcs :pointer :count 4)
  (cuda_flags :pointer :count 4)
  (opencl_funcs :pointer :count 4)
  (opencl_flags :pointer :count 4)
  (mic_funcs :pointer :count 4)
  (mpi_ms_funcs :pointer :count 4)
  (cpu_funcs_name :pointer :count 4)
  (nbuffers :int)
  (modes :pointer :count 8)
  (dyn_modes :pointer)
  (specific_nodes :unsigned-int)
  (nodes :pointer :count 8)
  (dyn_nodes :pointer)
  (model :pointer)
  (energy_model :pointer)
  (per_worker_stats :pointer :count 80)
  (name :string)
  (color :unsigned-int)
  (flags :int))

(cffi:defcstruct starpu_data_descr
  (handle :pointer)
  (mode starpu_data_access_mode))

(cffi:defcstruct starpu_task
  (name :string)
  (cl :pointer)
  (where :pointer)
  (nbuffers :int)
  (dyn_handles :pointer)
  (dyn_interfaces :pointer)
  (dyn_modes :pointer)
  (handles :pointer :count 8)
  (interfaces :pointer :count 8)
  (modes :pointer :count 8)
  (handles_sequential_consistency :pointer)
  (cl_arg :pointer)
  (cl_arg_size :pointer)
  (callback_func :pointer)
  (callback_arg :pointer)
  (prologue_callback_func :pointer)
  (prologue_callback_arg :pointer)
  (prologue_callback_pop_func :pointer)
  (prologue_callback_pop_arg :pointer)
  (tag_id :pointer)
  (cl_arg_free :unsigned-int)
  (callback_arg_free :unsigned-int)
  (prologue_callback_arg_free :unsigned-int)
  (prologue_callback_pop_arg_free :unsigned-int)
  (use_tag :unsigned-int)
  (sequential_consistency :unsigned-int)
  (synchronous :unsigned-int)
  (execute_on_a_specific_worker :unsigned-int)
  (detach :unsigned-int)
  (destroy :unsigned-int)
  (regenerate :unsigned-int)
  (mf_skip :unsigned-int)
  (no_submitorder :unsigned-int)
  (scheduled :unsigned-int)
  (prefetched :unsigned-int)
  (workerid :unsigned-int)
  (workerorder :unsigned-int)
  (workerids :pointer)
  (workerids_len :unsigned-int)
  (priority :int)
  (status starpu_task_status)
  (magic :int)
  (type :unsigned-int)
  (color :unsigned-int)
  (sched_ctx :unsigned-int)
  (hypervisor_tag :int)
  (possibly_parallel :unsigned-int)
  (bundle :pointer)
  (profiling_info :pointer)
  (flops :double)
  (predicted :double)
  (predicted_transfer :double)
  (predicted_start :double)
  (prev :pointer)
  (next :pointer)
  (starpu_private :pointer)
  (omp_task :pointer)
  (nb_termination_call_required :unsigned-int)
  (sched_data :pointer))

(cffi:defcfun ("starpu_task_init" starpu_task_init) :void
  (task :pointer))

(cffi:defcfun ("starpu_task_clean" starpu_task_clean) :void
  (task :pointer))

(cffi:defcfun ("starpu_task_create" starpu_task_create) :pointer)

(cffi:defcfun ("starpu_task_destroy" starpu_task_destroy) :void
  (task :pointer))

(cffi:defcfun ("starpu_task_submit" starpu_task_submit) :int
  (task :pointer))

(cffi:defcfun ("starpu_task_submit_to_ctx" starpu_task_submit_to_ctx) :int
  (task :pointer)
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_task_finished" starpu_task_finished) :int
  (task :pointer))

(cffi:defcfun ("starpu_task_wait" starpu_task_wait) :int
  (task :pointer))

(cffi:defcfun ("starpu_task_wait_array" starpu_task_wait_array) :int
  (tasks :pointer)
  (nb_tasks :unsigned-int))

(cffi:defcfun ("starpu_task_wait_for_all" starpu_task_wait_for_all) :int)

(cffi:defcfun ("starpu_task_wait_for_n_submitted" starpu_task_wait_for_n_submitted) :int
  (n :unsigned-int))

(cffi:defcfun ("starpu_task_wait_for_all_in_ctx" starpu_task_wait_for_all_in_ctx) :int
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_task_wait_for_n_submitted_in_ctx" starpu_task_wait_for_n_submitted_in_ctx) :int
  (sched_ctx_id :unsigned-int)
  (n :unsigned-int))

(cffi:defcfun ("starpu_task_wait_for_no_ready" starpu_task_wait_for_no_ready) :int)

(cffi:defcfun ("starpu_task_nready" starpu_task_nready) :int)

(cffi:defcfun ("starpu_task_nsubmitted" starpu_task_nsubmitted) :int)

(cffi:defcfun ("starpu_iteration_push" starpu_iteration_push) :void
  (iteration :unsigned-long))

(cffi:defcfun ("starpu_iteration_pop" starpu_iteration_pop) :void)

(cffi:defcfun ("starpu_do_schedule" starpu_do_schedule) :void)

(cffi:defcfun ("starpu_codelet_init" starpu_codelet_init) :void
  (cl :pointer))

(cffi:defcfun ("starpu_codelet_display_stats" starpu_codelet_display_stats) :void
  (cl :pointer))

(cffi:defcfun ("starpu_task_get_current" starpu_task_get_current) :pointer)

(cffi:defcfun ("starpu_task_get_current_data_node" starpu_task_get_current_data_node) :int
  (i :unsigned-int))

(cffi:defcfun ("starpu_task_get_model_name" starpu_task_get_model_name) :string
  (task :pointer))

(cffi:defcfun ("starpu_task_get_name" starpu_task_get_name) :string
  (task :pointer))

(cffi:defcfun ("starpu_task_dup" starpu_task_dup) :pointer
  (task :pointer))

(cffi:defcfun ("starpu_task_set_implementation" starpu_task_set_implementation) :void
  (task :pointer)
  (impl :unsigned-int))

(cffi:defcfun ("starpu_task_get_implementation" starpu_task_get_implementation) :unsigned-int
  (task :pointer))

(cffi:defcfun ("starpu_create_sync_task" starpu_create_sync_task) :void
  (sync_tag :pointer)
  (ndeps :unsigned-int)
  (deps :pointer)
  (callback :pointer)
  (callback_arg :pointer))

(cffi:defcfun ("starpu_create_callback_task" starpu_create_callback_task) :void
  (callback :pointer)
  (callback_arg :pointer))

(cffi:defcstruct starpu_sched_ctx_iterator
  (cursor :int)
  (value :pointer)
  (possible_value :pointer)
  (visited :pointer :count 80)
  (possibly_parallel :int))

(cffi:defcstruct starpu_worker_collection
  (workerids :pointer)
  (collection_private :pointer)
  (nworkers :unsigned-int)
  (unblocked_workers :pointer)
  (nunblocked_workers :unsigned-int)
  (masters :pointer)
  (nmasters :unsigned-int)
  (present :pointer :count 80)
  (is_unblocked :pointer :count 80)
  (is_master :pointer :count 80)
  (type starpu_worker_collection_type)
  (has_next :pointer)
  (get_next :pointer)
  (add :pointer)
  (remove :pointer)
  (init :pointer)
  (deinit :pointer)
  (init_iterator :pointer)
  (init_iterator_for_parallel_tasks :pointer))

(cffi:defcvar ("worker_list" worker_list)
  starpu_worker_collection)

(cffi:defcvar ("worker_tree" worker_tree)
  starpu_worker_collection)

(cffi:defcfun ("starpu_worker_get_count" starpu_worker_get_count) :unsigned-int)

(cffi:defcfun ("starpu_cpu_worker_get_count" starpu_cpu_worker_get_count) :unsigned-int)

(cffi:defcfun ("starpu_cuda_worker_get_count" starpu_cuda_worker_get_count) :unsigned-int)

(cffi:defcfun ("starpu_opencl_worker_get_count" starpu_opencl_worker_get_count) :unsigned-int)

(cffi:defcfun ("starpu_mic_worker_get_count" starpu_mic_worker_get_count) :unsigned-int)

(cffi:defcfun ("starpu_mpi_ms_worker_get_count" starpu_mpi_ms_worker_get_count) :unsigned-int)

(cffi:defcfun ("starpu_mic_device_get_count" starpu_mic_device_get_count) :unsigned-int)

(cffi:defcfun ("starpu_worker_get_id" starpu_worker_get_id) :int)

(cffi:defcfun ("_starpu_worker_get_id_check" _starpu_worker_get_id_check) :unsigned-int
  (f :string)
  (l :int))

(cffi:defcfun ("starpu_worker_get_id_check" starpu_worker_get_id_check) :unsigned-int)

(cffi:defcfun ("starpu_worker_get_bindid" starpu_worker_get_bindid) :int
  (workerid :int))

(cffi:defcfun ("starpu_sched_find_all_worker_combinations" starpu_sched_find_all_worker_combinations) :void)

(cffi:defcfun ("starpu_worker_get_type" starpu_worker_get_type) starpu_worker_archtype
  (id :int))

(cffi:defcfun ("starpu_worker_get_count_by_type" starpu_worker_get_count_by_type) :int
  (type starpu_worker_archtype))

(cffi:defcfun ("starpu_worker_get_ids_by_type" starpu_worker_get_ids_by_type) :unsigned-int
  (type starpu_worker_archtype)
  (workerids :pointer)
  (maxsize :unsigned-int))

(cffi:defcfun ("starpu_worker_get_by_type" starpu_worker_get_by_type) :int
  (type starpu_worker_archtype)
  (num :int))

(cffi:defcfun ("starpu_worker_get_by_devid" starpu_worker_get_by_devid) :int
  (type starpu_worker_archtype)
  (devid :int))

(cffi:defcfun ("starpu_worker_get_name" starpu_worker_get_name) :void
  (id :int)
  (dst :string)
  (maxlen :pointer))

(cffi:defcfun ("starpu_worker_display_names" starpu_worker_display_names) :void
  (output :pointer)
  (type starpu_worker_archtype))

(cffi:defcfun ("starpu_worker_get_devid" starpu_worker_get_devid) :int
  (id :int))

(cffi:defcfun ("starpu_worker_get_mp_nodeid" starpu_worker_get_mp_nodeid) :int
  (id :int))

(cffi:defcfun ("starpu_workers_get_tree" starpu_workers_get_tree) :pointer)

(cffi:defcfun ("starpu_worker_get_sched_ctx_list" starpu_worker_get_sched_ctx_list) :unsigned-int
  (worker :int)
  (sched_ctx :pointer))

(cffi:defcfun ("starpu_worker_is_blocked_in_parallel" starpu_worker_is_blocked_in_parallel) :unsigned-int
  (workerid :int))

(cffi:defcfun ("starpu_worker_is_slave_somewhere" starpu_worker_is_slave_somewhere) :unsigned-int
  (workerid :int))

(cffi:defcfun ("starpu_worker_get_type_as_string" starpu_worker_get_type_as_string) :string
  (type starpu_worker_archtype))

(cffi:defcfun ("starpu_bindid_get_workerids" starpu_bindid_get_workerids) :int
  (bindid :int)
  (workerids :pointer))

(cffi:defcfun ("starpu_worker_get_devids" starpu_worker_get_devids) :int
  (type starpu_worker_archtype)
  (devids :pointer)
  (num :int))

(cffi:defcfun ("starpu_worker_get_stream_workerids" starpu_worker_get_stream_workerids) :int
  (devid :unsigned-int)
  (workerids :pointer)
  (type starpu_worker_archtype))

(cffi:defcfun ("starpu_worker_get_sched_ctx_id_stream" starpu_worker_get_sched_ctx_id_stream) :unsigned-int
  (stream_workerid :unsigned-int))

(cffi:defcfun ("starpu_worker_get_hwloc_cpuset" starpu_worker_get_hwloc_cpuset) :pointer
  (workerid :int))

(cffi:defcfun ("starpu_worker_get_hwloc_obj" starpu_worker_get_hwloc_obj) :pointer
  (workerid :int))

(cffi:defcfun ("starpu_memory_node_get_devid" starpu_memory_node_get_devid) :int
  (node :unsigned-int))

(cffi:defcfun ("starpu_worker_get_local_memory_node" starpu_worker_get_local_memory_node) :unsigned-int)

(cffi:defcfun ("starpu_worker_get_memory_node" starpu_worker_get_memory_node) :unsigned-int
  (workerid :unsigned-int))

(cffi:defcfun ("starpu_memory_nodes_get_count" starpu_memory_nodes_get_count) :unsigned-int)

(cffi:defcfun ("starpu_memory_node_get_name" starpu_memory_node_get_name) :int
  (node :unsigned-int)
  (name :string)
  (size :pointer))

(cffi:defcfun ("starpu_memory_nodes_get_numa_count" starpu_memory_nodes_get_numa_count) :int)

(cffi:defcfun ("starpu_memory_nodes_numa_id_to_devid" starpu_memory_nodes_numa_id_to_devid) :int
  (osid :int))

(cffi:defcfun ("starpu_memory_nodes_numa_devid_to_id" starpu_memory_nodes_numa_devid_to_id) :int
  (id :unsigned-int))

(cffi:defcfun ("starpu_node_get_kind" starpu_node_get_kind) starpu_node_kind
  (node :unsigned-int))

(cffi:defcfun ("starpu_worker_sched_op_pending" starpu_worker_sched_op_pending) :int)

(cffi:defcfun ("starpu_worker_relax_on" starpu_worker_relax_on) :void)

(cffi:defcfun ("starpu_worker_relax_off" starpu_worker_relax_off) :void)

(cffi:defcfun ("starpu_worker_get_relax_state" starpu_worker_get_relax_state) :int)

(cffi:defcfun ("starpu_worker_lock" starpu_worker_lock) :void
  (workerid :int))

(cffi:defcfun ("starpu_worker_trylock" starpu_worker_trylock) :int
  (workerid :int))

(cffi:defcfun ("starpu_worker_unlock" starpu_worker_unlock) :void
  (workerid :int))

(cffi:defcfun ("starpu_worker_lock_self" starpu_worker_lock_self) :void)

(cffi:defcfun ("starpu_worker_unlock_self" starpu_worker_unlock_self) :void)

(cffi:defcfun ("starpu_combined_worker_get_count" starpu_combined_worker_get_count) :unsigned-int)

(cffi:defcfun ("starpu_worker_is_combined_worker" starpu_worker_is_combined_worker) :unsigned-int
  (id :int))

(cffi:defcfun ("starpu_combined_worker_get_id" starpu_combined_worker_get_id) :int)

(cffi:defcfun ("starpu_combined_worker_get_size" starpu_combined_worker_get_size) :int)

(cffi:defcfun ("starpu_combined_worker_get_rank" starpu_combined_worker_get_rank) :int)

(cffi:defcfun ("starpu_combined_worker_assign_workerid" starpu_combined_worker_assign_workerid) :int
  (nworkers :int)
  (workerid_array :pointer))

(cffi:defcfun ("starpu_combined_worker_get_description" starpu_combined_worker_get_description) :int
  (workerid :int)
  (worker_size :pointer)
  (combined_workerid :pointer))

(cffi:defcfun ("starpu_combined_worker_can_execute_task" starpu_combined_worker_can_execute_task) :int
  (workerid :unsigned-int)
  (task :pointer)
  (nimpl :unsigned-int))

(cffi:defcfun ("starpu_parallel_task_barrier_init" starpu_parallel_task_barrier_init) :void
  (task :pointer)
  (workerid :int))

(cffi:defcfun ("starpu_parallel_task_barrier_init_n" starpu_parallel_task_barrier_init_n) :void
  (task :pointer)
  (worker_size :int))

(cffi:defcstruct starpu_perfmodel_device
  (type starpu_worker_archtype)
  (devid :int)
  (ncores :int))

(cffi:defcstruct starpu_perfmodel_arch
  (ndevices :int)
  (devices :pointer))

(cffi:defcstruct starpu_perfmodel_history_entry
  (mean :double)
  (deviation :double)
  (sum :double)
  (sum2 :double)
  (nsample :unsigned-int)
  (nerror :unsigned-int)
  (footprint :pointer)
  (size :pointer)
  (flops :double)
  (duration :double)
  (tag :pointer)
  (parameters :pointer))

(cffi:defcstruct starpu_perfmodel_history_list
  (next :pointer)
  (entry :pointer))

(cffi:defcstruct starpu_perfmodel_regression_model
  (sumlny :double)
  (sumlnx :double)
  (sumlnx2 :double)
  (minx :unsigned-long)
  (maxx :unsigned-long)
  (sumlnxlny :double)
  (alpha :double)
  (beta :double)
  (valid :unsigned-int)
  (a :double)
  (b :double)
  (c :double)
  (nl_valid :unsigned-int)
  (nsample :unsigned-int)
  (coeff :pointer)
  (ncoeff :unsigned-int)
  (multi_valid :unsigned-int))

(cffi:defcstruct starpu_perfmodel_per_arch
  (cost_function :pointer)
  (size_base :pointer)
  (history :pointer)
  (list :pointer)
  (regression starpu_perfmodel_regression_model)
  (debug_path :pointer :count 256))

(cffi:defcstruct starpu_perfmodel
  (type starpu_perfmodel_type)
  (cost_function :pointer)
  (arch_cost_function :pointer)
  (size_base :pointer)
  (footprint :pointer)
  (symbol :string)
  (is_loaded :unsigned-int)
  (benchmarking :unsigned-int)
  (is_init :unsigned-int)
  (parameters :pointer)
  (parameters_names :pointer)
  (nparameters :unsigned-int)
  (combinations :pointer)
  (ncombinations :unsigned-int)
  (state :pointer))

(cffi:defcfun ("starpu_perfmodel_init" starpu_perfmodel_init) :void
  (model :pointer))

(cffi:defcfun ("starpu_perfmodel_load_file" starpu_perfmodel_load_file) :int
  (filename :string)
  (model :pointer))

(cffi:defcfun ("starpu_perfmodel_load_symbol" starpu_perfmodel_load_symbol) :int
  (symbol :string)
  (model :pointer))

(cffi:defcfun ("starpu_perfmodel_unload_model" starpu_perfmodel_unload_model) :int
  (model :pointer))

(cffi:defcfun ("starpu_perfmodel_get_model_path" starpu_perfmodel_get_model_path) :void
  (symbol :string)
  (path :string)
  (maxlen :pointer))

(cffi:defcfun ("starpu_perfmodel_dump_xml" starpu_perfmodel_dump_xml) :void
  (output :pointer)
  (model :pointer))

(cffi:defcfun ("starpu_perfmodel_free_sampling_directories" starpu_perfmodel_free_sampling_directories) :void)

(cffi:defcfun ("starpu_worker_get_perf_archtype" starpu_worker_get_perf_archtype) :pointer
  (workerid :int)
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_perfmodel_get_narch_combs" starpu_perfmodel_get_narch_combs) :int)

(cffi:defcfun ("starpu_perfmodel_arch_comb_add" starpu_perfmodel_arch_comb_add) :int
  (ndevices :int)
  (devices :pointer))

(cffi:defcfun ("starpu_perfmodel_arch_comb_get" starpu_perfmodel_arch_comb_get) :int
  (ndevices :int)
  (devices :pointer))

(cffi:defcfun ("starpu_perfmodel_arch_comb_fetch" starpu_perfmodel_arch_comb_fetch) :pointer
  (comb :int))

(cffi:defcfun ("starpu_perfmodel_get_model_per_arch" starpu_perfmodel_get_model_per_arch) :pointer
  (model :pointer)
  (arch :pointer)
  (impl :unsigned-int))

(cffi:defcfun ("starpu_perfmodel_get_model_per_devices" starpu_perfmodel_get_model_per_devices) :pointer
  (model :pointer)
  (impl :int)
  &rest)

(cffi:defcfun ("starpu_perfmodel_set_per_devices_cost_function" starpu_perfmodel_set_per_devices_cost_function) :int
  (model :pointer)
  (impl :int)
  (func :pointer)
  &rest)

(cffi:defcfun ("starpu_perfmodel_set_per_devices_size_base" starpu_perfmodel_set_per_devices_size_base) :int
  (model :pointer)
  (impl :int)
  (func :pointer)
  &rest)

(cffi:defcfun ("starpu_perfmodel_debugfilepath" starpu_perfmodel_debugfilepath) :void
  (model :pointer)
  (arch :pointer)
  (path :string)
  (maxlen :pointer)
  (nimpl :unsigned-int))

(cffi:defcfun ("starpu_perfmodel_get_archtype_name" starpu_perfmodel_get_archtype_name) :string
  (archtype starpu_worker_archtype))

(cffi:defcfun ("starpu_perfmodel_get_arch_name" starpu_perfmodel_get_arch_name) :void
  (arch :pointer)
  (archname :string)
  (maxlen :pointer)
  (nimpl :unsigned-int))

(cffi:defcfun ("starpu_perfmodel_history_based_expected_perf" starpu_perfmodel_history_based_expected_perf) :double
  (model :pointer)
  (arch :pointer)
  (footprint :pointer))

(cffi:defcfun ("starpu_perfmodel_initialize" starpu_perfmodel_initialize) :void)

(cffi:defcfun ("starpu_perfmodel_list" starpu_perfmodel_list) :int
  (output :pointer))

(cffi:defcfun ("starpu_perfmodel_print" starpu_perfmodel_print) :void
  (model :pointer)
  (arch :pointer)
  (nimpl :unsigned-int)
  (parameter :string)
  (footprint :pointer)
  (output :pointer))

(cffi:defcfun ("starpu_perfmodel_print_all" starpu_perfmodel_print_all) :int
  (model :pointer)
  (arch :string)
  (parameter :string)
  (footprint :pointer)
  (output :pointer))

(cffi:defcfun ("starpu_perfmodel_print_estimations" starpu_perfmodel_print_estimations) :int
  (model :pointer)
  (footprint :pointer)
  (output :pointer))

(cffi:defcfun ("starpu_perfmodel_list_combs" starpu_perfmodel_list_combs) :int
  (output :pointer)
  (model :pointer))

(cffi:defcfun ("starpu_perfmodel_update_history" starpu_perfmodel_update_history) :void
  (model :pointer)
  (task :pointer)
  (arch :pointer)
  (cpuid :unsigned-int)
  (nimpl :unsigned-int)
  (measured :double))

(cffi:defcfun ("starpu_perfmodel_directory" starpu_perfmodel_directory) :void
  (output :pointer))

(cffi:defcfun ("starpu_bus_print_bandwidth" starpu_bus_print_bandwidth) :void
  (f :pointer))

(cffi:defcfun ("starpu_bus_print_affinity" starpu_bus_print_affinity) :void
  (f :pointer))

(cffi:defcfun ("starpu_bus_print_filenames" starpu_bus_print_filenames) :void
  (f :pointer))

(cffi:defcfun ("starpu_transfer_bandwidth" starpu_transfer_bandwidth) :double
  (src_node :unsigned-int)
  (dst_node :unsigned-int))

(cffi:defcfun ("starpu_transfer_latency" starpu_transfer_latency) :double
  (src_node :unsigned-int)
  (dst_node :unsigned-int))

(cffi:defcfun ("starpu_transfer_predict" starpu_transfer_predict) :double
  (src_node :unsigned-int)
  (dst_node :unsigned-int)
  (size :pointer))

(cffi:defcvar ("starpu_perfmodel_nop" starpu_perfmodel_nop)
  starpu_perfmodel)

(cffi:defcstruct starpu_task_list
  (head :pointer)
  (tail :pointer))

(cffi:defcfun ("starpu_task_list_init" starpu_task_list_init) :void
  (list :pointer))

(cffi:defcfun ("starpu_task_list_push_front" starpu_task_list_push_front) :void
  (list :pointer)
  (task :pointer))

(cffi:defcfun ("starpu_task_list_push_back" starpu_task_list_push_back) :void
  (list :pointer)
  (task :pointer))

(cffi:defcfun ("starpu_task_list_front" starpu_task_list_front) :pointer
  (list :pointer))

(cffi:defcfun ("starpu_task_list_back" starpu_task_list_back) :pointer
  (list :pointer))

(cffi:defcfun ("starpu_task_list_empty" starpu_task_list_empty) :int
  (list :pointer))

(cffi:defcfun ("starpu_task_list_erase" starpu_task_list_erase) :void
  (list :pointer)
  (task :pointer))

(cffi:defcfun ("starpu_task_list_pop_front" starpu_task_list_pop_front) :pointer
  (list :pointer))

(cffi:defcfun ("starpu_task_list_pop_back" starpu_task_list_pop_back) :pointer
  (list :pointer))

(cffi:defcfun ("starpu_task_list_begin" starpu_task_list_begin) :pointer
  (list :pointer))

(cffi:defcfun ("starpu_task_list_end" starpu_task_list_end) :pointer
  (list :pointer))

(cffi:defcfun ("starpu_task_list_next" starpu_task_list_next) :pointer
  (task :pointer))

(cffi:defcfun ("starpu_task_list_ismember" starpu_task_list_ismember) :int
  (list :pointer)
  (look :pointer))

(cffi:defcfun ("starpu_task_list_move" starpu_task_list_move) :void
  (ldst :pointer)
  (lsrc :pointer))

(cffi:defcfun ("starpu_task_set" starpu_task_set) :int
  (task :pointer)
  (cl :pointer)
  &rest)

(cffi:defcfun ("starpu_task_build" starpu_task_build) :pointer
  (cl :pointer)
  &rest)

(cffi:defcfun ("starpu_task_insert" starpu_task_insert) :int
  (cl :pointer)
  &rest)

(cffi:defcfun ("starpu_insert_task" starpu_insert_task) :int
  (cl :pointer)
  &rest)

(cffi:defcfun ("starpu_task_insert_data_make_room" starpu_task_insert_data_make_room) :void
  (cl :pointer)
  (task :pointer)
  (allocated_buffers :pointer)
  (current_buffer :int)
  (room :int))

(cffi:defcfun ("starpu_task_insert_data_process_arg" starpu_task_insert_data_process_arg) :void
  (cl :pointer)
  (task :pointer)
  (allocated_buffers :pointer)
  (current_buffer :pointer)
  (arg_type :int)
  (handle :pointer))

(cffi:defcfun ("starpu_task_insert_data_process_array_arg" starpu_task_insert_data_process_array_arg) :void
  (cl :pointer)
  (task :pointer)
  (allocated_buffers :pointer)
  (current_buffer :pointer)
  (nb_handles :int)
  (handles :pointer))

(cffi:defcfun ("starpu_task_insert_data_process_mode_array_arg" starpu_task_insert_data_process_mode_array_arg) :void
  (cl :pointer)
  (task :pointer)
  (allocated_buffers :pointer)
  (current_buffer :pointer)
  (nb_descrs :int)
  (descrs :pointer))

(cffi:defcfun ("starpu_codelet_pack_args" starpu_codelet_pack_args) :void
  (arg_buffer :pointer)
  (arg_buffer_size :pointer)
  &rest)

(cffi:defcstruct starpu_codelet_pack_arg_data
  (arg_buffer :string)
  (arg_buffer_size :pointer)
  (current_offset :pointer)
  (nargs :int))

(cffi:defcfun ("starpu_codelet_pack_arg_init" starpu_codelet_pack_arg_init) :void
  (state :pointer))

(cffi:defcfun ("starpu_codelet_pack_arg" starpu_codelet_pack_arg) :void
  (state :pointer)
  (ptr :pointer)
  (ptr_size :pointer))

(cffi:defcfun ("starpu_codelet_pack_arg_fini" starpu_codelet_pack_arg_fini) :void
  (state :pointer)
  (cl_arg :pointer)
  (cl_arg_size :pointer))

(cffi:defcfun ("starpu_codelet_unpack_args" starpu_codelet_unpack_args) :void
  (cl_arg :pointer)
  &rest)

(cffi:defcfun ("starpu_codelet_unpack_args_and_copyleft" starpu_codelet_unpack_args_and_copyleft) :void
  (cl_arg :pointer)
  (buffer :pointer)
  (buffer_size :pointer)
  &rest)

(cffi:defcstruct starpu_sched_policy
  (init_sched :pointer)
  (deinit_sched :pointer)
  (push_task :pointer)
  (simulate_push_task :pointer)
  (push_task_notify :pointer)
  (pop_task :pointer)
  (pop_every_task :pointer)
  (submit_hook :pointer)
  (pre_exec_hook :pointer)
  (post_exec_hook :pointer)
  (do_schedule :pointer)
  (add_workers :pointer)
  (remove_workers :pointer)
  (policy_name :string)
  (policy_description :string)
  (worker_type starpu_worker_collection_type))

(cffi:defcfun ("starpu_sched_get_predefined_policies" starpu_sched_get_predefined_policies) :pointer)

(cffi:defcfun ("starpu_worker_get_sched_condition" starpu_worker_get_sched_condition) :void
  (workerid :int)
  (sched_mutex :pointer)
  (sched_cond :pointer))

(cffi:defcfun ("starpu_task_get_job_id" starpu_task_get_job_id) :unsigned-long
  (task :pointer))

(cffi:defcfun ("starpu_sched_get_min_priority" starpu_sched_get_min_priority) :int)

(cffi:defcfun ("starpu_sched_get_max_priority" starpu_sched_get_max_priority) :int)

(cffi:defcfun ("starpu_sched_set_min_priority" starpu_sched_set_min_priority) :int
  (min_prio :int))

(cffi:defcfun ("starpu_sched_set_max_priority" starpu_sched_set_max_priority) :int
  (max_prio :int))

(cffi:defcfun ("starpu_worker_can_execute_task" starpu_worker_can_execute_task) :int
  (workerid :unsigned-int)
  (task :pointer)
  (nimpl :unsigned-int))

(cffi:defcfun ("starpu_worker_can_execute_task_impl" starpu_worker_can_execute_task_impl) :int
  (workerid :unsigned-int)
  (task :pointer)
  (impl_mask :pointer))

(cffi:defcfun ("starpu_worker_can_execute_task_first_impl" starpu_worker_can_execute_task_first_impl) :int
  (workerid :unsigned-int)
  (task :pointer)
  (nimpl :pointer))

(cffi:defcfun ("starpu_push_local_task" starpu_push_local_task) :int
  (workerid :int)
  (task :pointer)
  (back :int))

(cffi:defcfun ("starpu_push_task_end" starpu_push_task_end) :int
  (task :pointer))

(cffi:defcfun ("starpu_get_prefetch_flag" starpu_get_prefetch_flag) :int)

(cffi:defcfun ("starpu_prefetch_task_input_on_node_prio" starpu_prefetch_task_input_on_node_prio) :int
  (task :pointer)
  (node :unsigned-int)
  (prio :int))

(cffi:defcfun ("starpu_prefetch_task_input_on_node" starpu_prefetch_task_input_on_node) :int
  (task :pointer)
  (node :unsigned-int))

(cffi:defcfun ("starpu_idle_prefetch_task_input_on_node_prio" starpu_idle_prefetch_task_input_on_node_prio) :int
  (task :pointer)
  (node :unsigned-int)
  (prio :int))

(cffi:defcfun ("starpu_idle_prefetch_task_input_on_node" starpu_idle_prefetch_task_input_on_node) :int
  (task :pointer)
  (node :unsigned-int))

(cffi:defcfun ("starpu_prefetch_task_input_for_prio" starpu_prefetch_task_input_for_prio) :int
  (task :pointer)
  (worker :unsigned-int)
  (prio :int))

(cffi:defcfun ("starpu_prefetch_task_input_for" starpu_prefetch_task_input_for) :int
  (task :pointer)
  (worker :unsigned-int))

(cffi:defcfun ("starpu_idle_prefetch_task_input_for_prio" starpu_idle_prefetch_task_input_for_prio) :int
  (task :pointer)
  (worker :unsigned-int)
  (prio :int))

(cffi:defcfun ("starpu_idle_prefetch_task_input_for" starpu_idle_prefetch_task_input_for) :int
  (task :pointer)
  (worker :unsigned-int))

(cffi:defcfun ("starpu_task_footprint" starpu_task_footprint) :pointer
  (model :pointer)
  (task :pointer)
  (arch :pointer)
  (nimpl :unsigned-int))

(cffi:defcfun ("starpu_task_data_footprint" starpu_task_data_footprint) :pointer
  (task :pointer))

(cffi:defcfun ("starpu_task_expected_length" starpu_task_expected_length) :double
  (task :pointer)
  (arch :pointer)
  (nimpl :unsigned-int))

(cffi:defcfun ("starpu_worker_get_relative_speedup" starpu_worker_get_relative_speedup) :double
  (perf_arch :pointer))

(cffi:defcfun ("starpu_task_expected_data_transfer_time" starpu_task_expected_data_transfer_time) :double
  (memory_node :unsigned-int)
  (task :pointer))

(cffi:defcfun ("starpu_task_expected_data_transfer_time_for" starpu_task_expected_data_transfer_time_for) :double
  (task :pointer)
  (worker :unsigned-int))

(cffi:defcfun ("starpu_data_expected_transfer_time" starpu_data_expected_transfer_time) :double
  (handle :pointer)
  (memory_node :unsigned-int)
  (mode starpu_data_access_mode))

(cffi:defcfun ("starpu_task_expected_energy" starpu_task_expected_energy) :double
  (task :pointer)
  (arch :pointer)
  (nimpl :unsigned-int))

(cffi:defcfun ("starpu_task_expected_conversion_time" starpu_task_expected_conversion_time) :double
  (task :pointer)
  (arch :pointer)
  (nimpl :unsigned-int))

(cffi:defcfun ("starpu_task_notify_ready_soon_register" starpu_task_notify_ready_soon_register) :void
  (f :pointer)
  (data :pointer))

(cffi:defcfun ("starpu_sched_ctx_worker_shares_tasks_lists" starpu_sched_ctx_worker_shares_tasks_lists) :void
  (workerid :int)
  (sched_ctx_id :int))

(cffi:defcfun ("starpu_sched_task_break" starpu_sched_task_break) :void
  (task :pointer))

(cffi:defcfun ("starpu_wake_worker_relax" starpu_wake_worker_relax) :int
  (workerid :int))

(cffi:defcfun ("starpu_wake_worker_no_relax" starpu_wake_worker_no_relax) :int
  (workerid :int))

(cffi:defcfun ("starpu_wake_worker_locked" starpu_wake_worker_locked) :int
  (workerid :int))

(cffi:defcfun ("starpu_wake_worker_relax_light" starpu_wake_worker_relax_light) :int
  (workerid :int))

(cffi:defcfun ("starpu_sched_ctx_create" starpu_sched_ctx_create) :unsigned-int
  (workerids_ctx :pointer)
  (nworkers_ctx :int)
  (sched_ctx_name :string)
  &rest)

(cffi:defcfun ("starpu_sched_ctx_create_inside_interval" starpu_sched_ctx_create_inside_interval) :unsigned-int
  (policy_name :string)
  (sched_ctx_name :string)
  (min_ncpus :int)
  (max_ncpus :int)
  (min_ngpus :int)
  (max_ngpus :int)
  (allow_overlap :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_register_close_callback" starpu_sched_ctx_register_close_callback) :void
  (sched_ctx_id :unsigned-int)
  (close_callback :pointer)
  (args :pointer))

(cffi:defcfun ("starpu_sched_ctx_add_workers" starpu_sched_ctx_add_workers) :void
  (workerids_ctx :pointer)
  (nworkers_ctx :unsigned-int)
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_remove_workers" starpu_sched_ctx_remove_workers) :void
  (workerids_ctx :pointer)
  (nworkers_ctx :unsigned-int)
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_display_workers" starpu_sched_ctx_display_workers) :void
  (sched_ctx_id :unsigned-int)
  (f :pointer))

(cffi:defcfun ("starpu_sched_ctx_delete" starpu_sched_ctx_delete) :void
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_set_inheritor" starpu_sched_ctx_set_inheritor) :void
  (sched_ctx_id :unsigned-int)
  (inheritor :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_get_inheritor" starpu_sched_ctx_get_inheritor) :unsigned-int
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_get_hierarchy_level" starpu_sched_ctx_get_hierarchy_level) :unsigned-int
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_set_context" starpu_sched_ctx_set_context) :void
  (sched_ctx_id :pointer))

(cffi:defcfun ("starpu_sched_ctx_get_context" starpu_sched_ctx_get_context) :unsigned-int)

(cffi:defcfun ("starpu_sched_ctx_stop_task_submission" starpu_sched_ctx_stop_task_submission) :void)

(cffi:defcfun ("starpu_sched_ctx_finished_submit" starpu_sched_ctx_finished_submit) :void
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_get_workers_list" starpu_sched_ctx_get_workers_list) :unsigned-int
  (sched_ctx_id :unsigned-int)
  (workerids :pointer))

(cffi:defcfun ("starpu_sched_ctx_get_workers_list_raw" starpu_sched_ctx_get_workers_list_raw) :unsigned-int
  (sched_ctx_id :unsigned-int)
  (workerids :pointer))

(cffi:defcfun ("starpu_sched_ctx_get_nworkers" starpu_sched_ctx_get_nworkers) :unsigned-int
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_get_nshared_workers" starpu_sched_ctx_get_nshared_workers) :unsigned-int
  (sched_ctx_id :unsigned-int)
  (sched_ctx_id2 :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_contains_worker" starpu_sched_ctx_contains_worker) :unsigned-int
  (workerid :int)
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_contains_type_of_worker" starpu_sched_ctx_contains_type_of_worker) :unsigned-int
  (arch starpu_worker_archtype)
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_worker_get_id" starpu_sched_ctx_worker_get_id) :unsigned-int
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_get_ctx_for_task" starpu_sched_ctx_get_ctx_for_task) :unsigned-int
  (task :pointer))

(cffi:defcfun ("starpu_sched_ctx_overlapping_ctxs_on_worker" starpu_sched_ctx_overlapping_ctxs_on_worker) :unsigned-int
  (workerid :int))

(cffi:defcfun ("starpu_sched_ctx_get_user_data" starpu_sched_ctx_get_user_data) :pointer
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_set_user_data" starpu_sched_ctx_set_user_data) :void
  (sched_ctx_id :unsigned-int)
  (user_data :pointer))

(cffi:defcfun ("starpu_sched_ctx_set_policy_data" starpu_sched_ctx_set_policy_data) :void
  (sched_ctx_id :unsigned-int)
  (policy_data :pointer))

(cffi:defcfun ("starpu_sched_ctx_get_policy_data" starpu_sched_ctx_get_policy_data) :pointer
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_get_sched_policy" starpu_sched_ctx_get_sched_policy) :pointer
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_exec_parallel_code" starpu_sched_ctx_exec_parallel_code) :pointer
  (func :pointer)
  (param :pointer)
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_get_nready_tasks" starpu_sched_ctx_get_nready_tasks) :int
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_get_nready_flops" starpu_sched_ctx_get_nready_flops) :double
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_list_task_counters_increment" starpu_sched_ctx_list_task_counters_increment) :void
  (sched_ctx_id :unsigned-int)
  (workerid :int))

(cffi:defcfun ("starpu_sched_ctx_list_task_counters_decrement" starpu_sched_ctx_list_task_counters_decrement) :void
  (sched_ctx_id :unsigned-int)
  (workerid :int))

(cffi:defcfun ("starpu_sched_ctx_list_task_counters_reset" starpu_sched_ctx_list_task_counters_reset) :void
  (sched_ctx_id :unsigned-int)
  (workerid :int))

(cffi:defcfun ("starpu_sched_ctx_list_task_counters_increment_all_ctx_locked" starpu_sched_ctx_list_task_counters_increment_all_ctx_locked) :void
  (task :pointer)
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_list_task_counters_decrement_all_ctx_locked" starpu_sched_ctx_list_task_counters_decrement_all_ctx_locked) :void
  (task :pointer)
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_list_task_counters_reset_all" starpu_sched_ctx_list_task_counters_reset_all) :void
  (task :pointer)
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_set_priority" starpu_sched_ctx_set_priority) :void
  (workers :pointer)
  (nworkers :int)
  (sched_ctx_id :unsigned-int)
  (priority :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_get_priority" starpu_sched_ctx_get_priority) :unsigned-int
  (worker :int)
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_get_available_cpuids" starpu_sched_ctx_get_available_cpuids) :void
  (sched_ctx_id :unsigned-int)
  (cpuids :pointer)
  (ncpuids :pointer))

(cffi:defcfun ("starpu_sched_ctx_bind_current_thread_to_cpuid" starpu_sched_ctx_bind_current_thread_to_cpuid) :void
  (cpuid :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_book_workers_for_task" starpu_sched_ctx_book_workers_for_task) :int
  (sched_ctx_id :unsigned-int)
  (workerids :pointer)
  (nworkers :int))

(cffi:defcfun ("starpu_sched_ctx_unbook_workers_for_task" starpu_sched_ctx_unbook_workers_for_task) :void
  (sched_ctx_id :unsigned-int)
  (master :int))

(cffi:defcfun ("starpu_sched_ctx_worker_is_master_for_child_ctx" starpu_sched_ctx_worker_is_master_for_child_ctx) :unsigned-int
  (workerid :int)
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_master_get_context" starpu_sched_ctx_master_get_context) :unsigned-int
  (masterid :int))

(cffi:defcfun ("starpu_sched_ctx_revert_task_counters_ctx_locked" starpu_sched_ctx_revert_task_counters_ctx_locked) :void
  (sched_ctx_id :unsigned-int)
  (flops :double))

(cffi:defcfun ("starpu_sched_ctx_move_task_to_ctx_locked" starpu_sched_ctx_move_task_to_ctx_locked) :void
  (task :pointer)
  (sched_ctx :unsigned-int)
  (with_repush :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_get_worker_rank" starpu_sched_ctx_get_worker_rank) :int
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_get_sched_policy_init" starpu_sched_ctx_get_sched_policy_init) :pointer
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_has_starpu_scheduler" starpu_sched_ctx_has_starpu_scheduler) :unsigned-int
  (sched_ctx_id :unsigned-int)
  (awake_workers :pointer))

(cffi:defcfun ("starpu_sched_ctx_get_stream_worker" starpu_sched_ctx_get_stream_worker) :int
  (sub_ctx :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_get_nsms" starpu_sched_ctx_get_nsms) :int
  (sched_ctx :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_get_sms_interval" starpu_sched_ctx_get_sms_interval) :void
  (stream_workerid :int)
  (start :pointer)
  (end :pointer))

(cffi:defcfun ("starpu_sched_ctx_get_min_priority" starpu_sched_ctx_get_min_priority) :int
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_get_max_priority" starpu_sched_ctx_get_max_priority) :int
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_set_min_priority" starpu_sched_ctx_set_min_priority) :int
  (sched_ctx_id :unsigned-int)
  (min_prio :int))

(cffi:defcfun ("starpu_sched_ctx_set_max_priority" starpu_sched_ctx_set_max_priority) :int
  (sched_ctx_id :unsigned-int)
  (max_prio :int))

(cffi:defcfun ("starpu_sched_ctx_min_priority_is_set" starpu_sched_ctx_min_priority_is_set) :int
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_max_priority_is_set" starpu_sched_ctx_max_priority_is_set) :int
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_create_worker_collection" starpu_sched_ctx_create_worker_collection) :pointer
  (sched_ctx_id :unsigned-int)
  (type starpu_worker_collection_type))

(cffi:defcfun ("starpu_sched_ctx_delete_worker_collection" starpu_sched_ctx_delete_worker_collection) :void
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_sched_ctx_get_worker_collection" starpu_sched_ctx_get_worker_collection) :pointer
  (sched_ctx_id :unsigned-int))

(cffi:defcfun ("starpu_wake_all_blocked_workers" starpu_wake_all_blocked_workers) :void)

(cffi:defcfun ("starpu_progression_hook_register" starpu_progression_hook_register) :int
  (func :pointer)
  (arg :pointer))

(cffi:defcfun ("starpu_progression_hook_deregister" starpu_progression_hook_deregister) :void
  (hook_id :int))

(cffi:defcfun ("starpu_idle_hook_register" starpu_idle_hook_register) :int
  (func :pointer)
  (arg :pointer))

(cffi:defcfun ("starpu_idle_hook_deregister" starpu_idle_hook_deregister) :void
  (hook_id :int))

(cffi:defcfun ("starpu_cublas_init" starpu_cublas_init) :void)

(cffi:defcfun ("starpu_cublas_set_stream" starpu_cublas_set_stream) :void)

(cffi:defcfun ("starpu_cublas_shutdown" starpu_cublas_shutdown) :void)

(cffi:defcfun ("starpu_cusparse_init" starpu_cusparse_init) :void)

(cffi:defcfun ("starpu_cusparse_shutdown" starpu_cusparse_shutdown) :void)

(cffi:defcfun ("starpu_bound_start" starpu_bound_start) :void
  (deps :int)
  (prio :int))

(cffi:defcfun ("starpu_bound_stop" starpu_bound_stop) :void)

(cffi:defcfun ("starpu_bound_print_dot" starpu_bound_print_dot) :void
  (output :pointer))

(cffi:defcfun ("starpu_bound_compute" starpu_bound_compute) :void
  (res :pointer)
  (integer_res :pointer)
  (integer :int))

(cffi:defcfun ("starpu_bound_print_lp" starpu_bound_print_lp) :void
  (output :pointer))

(cffi:defcfun ("starpu_bound_print_mps" starpu_bound_print_mps) :void
  (output :pointer))

(cffi:defcfun ("starpu_bound_print" starpu_bound_print) :void
  (output :pointer)
  (integer :int))

(cffi:defcfun ("starpu_hash_crc32c_be_n" starpu_hash_crc32c_be_n) :pointer
  (input :pointer)
  (n :pointer)
  (inputcrc :pointer))

(cffi:defcfun ("starpu_hash_crc32c_be" starpu_hash_crc32c_be) :pointer
  (input :pointer)
  (inputcrc :pointer))

(cffi:defcfun ("starpu_hash_crc32c_string" starpu_hash_crc32c_string) :pointer
  (str :string)
  (inputcrc :pointer))

(cffi:defcstruct starpu_profiling_task_info
  (submit_time :pointer)
  (push_start_time :pointer)
  (push_end_time :pointer)
  (pop_start_time :pointer)
  (pop_end_time :pointer)
  (acquire_data_start_time :pointer)
  (acquire_data_end_time :pointer)
  (start_time :pointer)
  (end_time :pointer)
  (release_data_start_time :pointer)
  (release_data_end_time :pointer)
  (callback_start_time :pointer)
  (callback_end_time :pointer)
  (workerid :int)
  (used_cycles :pointer)
  (stall_cycles :pointer)
  (energy_consumed :double))

(cffi:defcstruct starpu_profiling_worker_info
  (start_time :pointer)
  (total_time :pointer)
  (executing_time :pointer)
  (sleeping_time :pointer)
  (executed_tasks :int)
  (used_cycles :pointer)
  (stall_cycles :pointer)
  (energy_consumed :double)
  (flops :double))

(cffi:defcstruct starpu_profiling_bus_info
  (start_time :pointer)
  (total_time :pointer)
  (transferred_bytes :long-long)
  (transfer_count :int))

(cffi:defcfun ("starpu_profiling_init" starpu_profiling_init) :void)

(cffi:defcfun ("starpu_profiling_set_id" starpu_profiling_set_id) :void
  (new_id :int))

(cffi:defcfun ("starpu_profiling_status_set" starpu_profiling_status_set) :int
  (status :int))

(cffi:defcfun ("starpu_profiling_status_get" starpu_profiling_status_get) :int)

(cffi:defcfun ("starpu_profiling_worker_get_info" starpu_profiling_worker_get_info) :int
  (workerid :int)
  (worker_info :pointer))

(cffi:defcfun ("starpu_bus_get_count" starpu_bus_get_count) :int)

(cffi:defcfun ("starpu_bus_get_id" starpu_bus_get_id) :int
  (src :int)
  (dst :int))

(cffi:defcfun ("starpu_bus_get_src" starpu_bus_get_src) :int
  (busid :int))

(cffi:defcfun ("starpu_bus_get_dst" starpu_bus_get_dst) :int
  (busid :int))

(cffi:defcfun ("starpu_bus_set_direct" starpu_bus_set_direct) :void
  (busid :int)
  (direct :int))

(cffi:defcfun ("starpu_bus_get_direct" starpu_bus_get_direct) :int
  (busid :int))

(cffi:defcfun ("starpu_bus_set_ngpus" starpu_bus_set_ngpus) :void
  (busid :int)
  (ngpus :int))

(cffi:defcfun ("starpu_bus_get_ngpus" starpu_bus_get_ngpus) :int
  (busid :int))

(cffi:defcfun ("starpu_bus_get_profiling_info" starpu_bus_get_profiling_info) :int
  (busid :int)
  (bus_info :pointer))

(cffi:defcfun ("starpu_timespec_clear" starpu_timespec_clear) :void
  (tsp :pointer))

(cffi:defcfun ("starpu_timespec_add" starpu_timespec_add) :void
  (a :pointer)
  (b :pointer)
  (result :pointer))

(cffi:defcfun ("starpu_timespec_accumulate" starpu_timespec_accumulate) :void
  (result :pointer)
  (a :pointer))

(cffi:defcfun ("starpu_timespec_sub" starpu_timespec_sub) :void
  (a :pointer)
  (b :pointer)
  (result :pointer))

(cffi:defcfun ("starpu_timing_timespec_delay_us" starpu_timing_timespec_delay_us) :double
  (start :pointer)
  (end :pointer))

(cffi:defcfun ("starpu_timing_timespec_to_us" starpu_timing_timespec_to_us) :double
  (ts :pointer))

(cffi:defcfun ("starpu_profiling_bus_helper_display_summary" starpu_profiling_bus_helper_display_summary) :void)

(cffi:defcfun ("starpu_profiling_worker_helper_display_summary" starpu_profiling_worker_helper_display_summary) :void)

(cffi:defcfun ("starpu_data_display_memory_stats" starpu_data_display_memory_stats) :void)

(cffi:defcstruct starpu_fxt_codelet_event
  (symbol :pointer :count 256)
  (workerid :int)
  (perfmodel_archname :pointer :count 256)
  (hash :pointer)
  (size :pointer)
  (time :float))

(cffi:defcstruct starpu_fxt_options
  (per_task_colour :unsigned-int)
  (no_events :unsigned-int)
  (no_counter :unsigned-int)
  (no_bus :unsigned-int)
  (no_flops :unsigned-int)
  (ninputfiles :unsigned-int)
  (no_smooth :unsigned-int)
  (no_acquire :unsigned-int)
  (memory_states :unsigned-int)
  (internal :unsigned-int)
  (label_deps :unsigned-int)
  (filenames :pointer :count 64)
  (out_paje_path :string)
  (distrib_time_path :string)
  (activity_path :string)
  (dag_path :string)
  (tasks_path :string)
  (data_path :string)
  (anim_path :string)
  (states_path :string)
  (file_prefix :string)
  (file_offset :pointer)
  (file_rank :int)
  (worker_names :pointer)
  (worker_archtypes :pointer :count 80)
  (nworkers :int)
  (dumped_codelets :pointer)
  (dumped_codelets_count :long))

(cffi:defcfun ("starpu_fxt_options_init" starpu_fxt_options_init) :void
  (options :pointer))

(cffi:defcfun ("starpu_fxt_generate_trace" starpu_fxt_generate_trace) :void
  (options :pointer))

(cffi:defcfun ("starpu_fxt_autostart_profiling" starpu_fxt_autostart_profiling) :void
  (autostart :int))

(cffi:defcfun ("starpu_fxt_start_profiling" starpu_fxt_start_profiling) :void)

(cffi:defcfun ("starpu_fxt_stop_profiling" starpu_fxt_stop_profiling) :void)

(cffi:defcfun ("starpu_fxt_write_data_trace" starpu_fxt_write_data_trace) :void
  (filename_in :string))

(cffi:defcfun ("starpu_fxt_trace_user_event" starpu_fxt_trace_user_event) :void
  (code :unsigned-long))

(cffi:defcfun ("starpu_fxt_trace_user_event_string" starpu_fxt_trace_user_event_string) :void
  (s :string))

(cffi:defcstruct starpu_driver
  (type starpu_worker_archtype)
  (id :pointer))

(cffi:defcunion starpu_driver_id
  (cpu_id :unsigned-int)
  (cuda_id :unsigned-int)
  (opencl_id :pointer))

(cffi:defcfun ("starpu_driver_run" starpu_driver_run) :int
  (d :pointer))

(cffi:defcfun ("starpu_drivers_request_termination" starpu_drivers_request_termination) :void)

(cffi:defcfun ("starpu_driver_init" starpu_driver_init) :int
  (d :pointer))

(cffi:defcfun ("starpu_driver_run_once" starpu_driver_run_once) :int
  (d :pointer))

(cffi:defcfun ("starpu_driver_deinit" starpu_driver_deinit) :int
  (d :pointer))

(cffi:defcstruct starpu_tree
  (nodes :pointer)
  (father :pointer)
  (arity :int)
  (id :int)
  (level :int)
  (is_pu :int))

(cffi:defcfun ("starpu_tree_reset_visited" starpu_tree_reset_visited) :void
  (tree :pointer)
  (visited :string))

(cffi:defcfun ("starpu_tree_prepare_children" starpu_tree_prepare_children) :void
  (arity :unsigned-int)
  (father :pointer))

(cffi:defcfun ("starpu_tree_insert" starpu_tree_insert) :void
  (tree :pointer)
  (id :int)
  (level :int)
  (is_pu :int)
  (arity :int)
  (father :pointer))

(cffi:defcfun ("starpu_tree_get" starpu_tree_get) :pointer
  (tree :pointer)
  (id :int))

(cffi:defcfun ("starpu_tree_get_neighbour" starpu_tree_get_neighbour) :pointer
  (tree :pointer)
  (node :pointer)
  (visited :string)
  (present :string))

(cffi:defcfun ("starpu_tree_free" starpu_tree_free) :void
  (tree :pointer))

(cffi:defcfun ("starpu_bitmap_create" starpu_bitmap_create) :pointer)

(cffi:defcfun ("starpu_bitmap_destroy" starpu_bitmap_destroy) :void
  (b :pointer))

(cffi:defcfun ("starpu_bitmap_set" starpu_bitmap_set) :void
  (b :pointer)
  (e :int))

(cffi:defcfun ("starpu_bitmap_unset" starpu_bitmap_unset) :void
  (b :pointer)
  (e :int))

(cffi:defcfun ("starpu_bitmap_unset_all" starpu_bitmap_unset_all) :void
  (b :pointer))

(cffi:defcfun ("starpu_bitmap_get" starpu_bitmap_get) :int
  (b :pointer)
  (e :int))

(cffi:defcfun ("starpu_bitmap_unset_and" starpu_bitmap_unset_and) :void
  (a :pointer)
  (b :pointer)
  (c :pointer))

(cffi:defcfun ("starpu_bitmap_or" starpu_bitmap_or) :void
  (a :pointer)
  (b :pointer))

(cffi:defcfun ("starpu_bitmap_and_get" starpu_bitmap_and_get) :int
  (b1 :pointer)
  (b2 :pointer)
  (e :int))

(cffi:defcfun ("starpu_bitmap_cardinal" starpu_bitmap_cardinal) :int
  (b :pointer))

(cffi:defcfun ("starpu_bitmap_first" starpu_bitmap_first) :int
  (b :pointer))

(cffi:defcfun ("starpu_bitmap_last" starpu_bitmap_last) :int
  (b :pointer))

(cffi:defcfun ("starpu_bitmap_next" starpu_bitmap_next) :int
  (b :pointer)
  (e :int))

(cffi:defcfun ("starpu_bitmap_has_next" starpu_bitmap_has_next) :int
  (b :pointer)
  (e :int))

(cffi:defcstruct starpu_conf
  (magic :int)
  (sched_policy_name :string)
  (sched_policy :pointer)
  (sched_policy_init :pointer)
  (ncpus :int)
  (reserve_ncpus :int)
  (ncuda :int)
  (nopencl :int)
  (nmic :int)
  (nmpi_ms :int)
  (use_explicit_workers_bindid :unsigned-int)
  (workers_bindid :pointer :count 80)
  (use_explicit_workers_cuda_gpuid :unsigned-int)
  (workers_cuda_gpuid :pointer :count 80)
  (use_explicit_workers_opencl_gpuid :unsigned-int)
  (workers_opencl_gpuid :pointer :count 80)
  (use_explicit_workers_mic_deviceid :unsigned-int)
  (workers_mic_deviceid :pointer :count 80)
  (use_explicit_workers_mpi_ms_deviceid :unsigned-int)
  (workers_mpi_ms_deviceid :pointer :count 80)
  (bus_calibrate :int)
  (calibrate :int)
  (single_combined_worker :int)
  (mic_sink_program_path :string)
  (disable_asynchronous_copy :int)
  (disable_asynchronous_cuda_copy :int)
  (disable_asynchronous_opencl_copy :int)
  (disable_asynchronous_mic_copy :int)
  (disable_asynchronous_mpi_ms_copy :int)
  (cuda_opengl_interoperability :pointer)
  (n_cuda_opengl_interoperability :unsigned-int)
  (not_launched_drivers :pointer)
  (n_not_launched_drivers :unsigned-int)
  (trace_buffer_size :unsigned-int)
  (global_sched_ctx_min_priority :int)
  (global_sched_ctx_max_priority :int)
  (catch_signals :int))

(cffi:defcfun ("starpu_conf_init" starpu_conf_init) :int
  (conf :pointer))

(cffi:defcfun ("starpu_init" starpu_init) :int
  (conf :pointer))

(cffi:defcfun ("starpu_initialize" starpu_initialize) :int
  (user_conf :pointer)
  (argc :pointer)
  (argv :pointer))

(cffi:defcfun ("starpu_is_initialized" starpu_is_initialized) :int)

(cffi:defcfun ("starpu_wait_initialized" starpu_wait_initialized) :void)

(cffi:defcfun ("starpu_shutdown" starpu_shutdown) :void)

(cffi:defcfun ("starpu_pause" starpu_pause) :void)

(cffi:defcfun ("starpu_resume" starpu_resume) :void)

(cffi:defcfun ("starpu_get_next_bindid" starpu_get_next_bindid) :unsigned-int
  (flags :unsigned-int)
  (preferred :pointer)
  (npreferred :unsigned-int))

(cffi:defcfun ("starpu_bind_thread_on" starpu_bind_thread_on) :int
  (cpuid :int)
  (flags :unsigned-int)
  (name :string))

(cffi:defcfun ("starpu_topology_print" starpu_topology_print) :void
  (f :pointer))

(cffi:defcfun ("starpu_asynchronous_copy_disabled" starpu_asynchronous_copy_disabled) :int)

(cffi:defcfun ("starpu_asynchronous_cuda_copy_disabled" starpu_asynchronous_cuda_copy_disabled) :int)

(cffi:defcfun ("starpu_asynchronous_opencl_copy_disabled" starpu_asynchronous_opencl_copy_disabled) :int)

(cffi:defcfun ("starpu_asynchronous_mic_copy_disabled" starpu_asynchronous_mic_copy_disabled) :int)

(cffi:defcfun ("starpu_asynchronous_mpi_ms_copy_disabled" starpu_asynchronous_mpi_ms_copy_disabled) :int)

(cffi:defcfun ("starpu_display_stats" starpu_display_stats) :void)

(cffi:defcfun ("starpu_get_version" starpu_get_version) :void
  (major :pointer)
  (minor :pointer)
  (release :pointer))


